/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jfPermissoes.java
 *
 * Created on 09/08/2010, 14:48:02
 */

package visual;

import controlador.ClasseGeral;
import controlador.ControleImagem;
import controlador.ControleVersao;
import dao.DAO;
import java.awt.Image;
import java.awt.Toolkit;
import modelo.Permissoes;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author luizam
 */
public class jfPermissoes extends javax.swing.JFrame {

    private static ControleVersao versao = new ControleVersao();
    private ClasseGeral classeGeral;
    private ControleImagem controleImagem = new ControleImagem();
    private DAO dao;
    private Permissoes permissoes;
    
    private jdBuscaPermissoes jdbp;
    private JasperPrint jPrint;
    private JasperViewer jViewer;

    public int codigo = 0;
    private String opcao = "salvar";
    private String nomeUsuario;
    private String tipoCadastroUsuario;
    private boolean cadastrarAluno;
    private boolean cadastrarCmei = false;
    private boolean cadastrarFuncaoCargo = false;
    private boolean cadastrarLicenca;
    private boolean cadastrarRestricao;
    private boolean cadastrarServidor;
    private boolean cadastrarUsuario;
    private boolean imprimirAluno;
    private boolean imprimirCmei;

    /** Creates new form jfPermissoes */
    public jfPermissoes() {
        super("Permissões para Usuário - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage(controleImagem.getIconeImagem());
        this.setIconImage(img);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgCadastroCmei = new javax.swing.ButtonGroup();
        btgCadastroAluno = new javax.swing.ButtonGroup();
        btgCadastroFuncaoCargo = new javax.swing.ButtonGroup();
        btgCadastroUsuario = new javax.swing.ButtonGroup();
        btgCadastroServidor = new javax.swing.ButtonGroup();
        btgImprimirAluno = new javax.swing.ButtonGroup();
        btgImprimirCmei = new javax.swing.ButtonGroup();
        btgCadastroLicenca = new javax.swing.ButtonGroup();
        btgCadastroRestricao = new javax.swing.ButtonGroup();
        jtpPermissoes = new javax.swing.JTabbedPane();
        jpPermissoesCadastro = new javax.swing.JPanel();
        jpCadastroCmei = new javax.swing.JPanel();
        jrbCmeiCadastrar = new javax.swing.JRadioButton();
        jrbCmeiVisualizar = new javax.swing.JRadioButton();
        jpCadastroFuncaoCargo = new javax.swing.JPanel();
        jrbFuncaoCargoCadastrar = new javax.swing.JRadioButton();
        jrbFuncaoCargoVisualizar = new javax.swing.JRadioButton();
        jpCadastroAluno = new javax.swing.JPanel();
        jrbAlunoCadastrar = new javax.swing.JRadioButton();
        jrbAlunoVisualizar = new javax.swing.JRadioButton();
        jpCadastroUsuario = new javax.swing.JPanel();
        jrbUsuarioCadastrar = new javax.swing.JRadioButton();
        jrbUsuarioVisualizar = new javax.swing.JRadioButton();
        jpCadastroServidor = new javax.swing.JPanel();
        jrbServidorCadastrar = new javax.swing.JRadioButton();
        jrbServidorVisualizar = new javax.swing.JRadioButton();
        jpCadastroLicenca = new javax.swing.JPanel();
        jrbLicencaCadastrar = new javax.swing.JRadioButton();
        jrbLicencaVisualizar = new javax.swing.JRadioButton();
        jpCadastroRestricao = new javax.swing.JPanel();
        jrbRestricaoCadastrar = new javax.swing.JRadioButton();
        jrbRestricaoVisualizar = new javax.swing.JRadioButton();
        jpPermissoesImpressos = new javax.swing.JPanel();
        jpCadastroCmei1 = new javax.swing.JPanel();
        jrbImpressosAlunoPermitir = new javax.swing.JRadioButton();
        jrbImpressosAlunoNaoPermitir = new javax.swing.JRadioButton();
        jpCadastroAluno1 = new javax.swing.JPanel();
        jrbImpressosCmeiPermitir = new javax.swing.JRadioButton();
        jrbImpressosCmeiNaoPermitir = new javax.swing.JRadioButton();
        jpBotoes = new javax.swing.JPanel();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbImprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpCadastroCmei.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CMEI", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jpCadastroCmei.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btgCadastroCmei.add(jrbCmeiCadastrar);
        jrbCmeiCadastrar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbCmeiCadastrar.setText("Cadastrar");
        jrbCmeiCadastrar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbCmeiCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCmeiCadastrarActionPerformed(evt);
            }
        });

        btgCadastroCmei.add(jrbCmeiVisualizar);
        jrbCmeiVisualizar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbCmeiVisualizar.setText("Visualizar");
        jrbCmeiVisualizar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbCmeiVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbCmeiVisualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpCadastroCmeiLayout = new javax.swing.GroupLayout(jpCadastroCmei);
        jpCadastroCmei.setLayout(jpCadastroCmeiLayout);
        jpCadastroCmeiLayout.setHorizontalGroup(
            jpCadastroCmeiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroCmeiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCadastroCmeiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbCmeiCadastrar)
                    .addComponent(jrbCmeiVisualizar))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jpCadastroCmeiLayout.setVerticalGroup(
            jpCadastroCmeiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroCmeiLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrbCmeiCadastrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbCmeiVisualizar)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jpCadastroFuncaoCargo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Função / Cargo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jpCadastroFuncaoCargo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btgCadastroFuncaoCargo.add(jrbFuncaoCargoCadastrar);
        jrbFuncaoCargoCadastrar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbFuncaoCargoCadastrar.setText("Cadastrar");
        jrbFuncaoCargoCadastrar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbFuncaoCargoCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbFuncaoCargoCadastrarActionPerformed(evt);
            }
        });

        btgCadastroFuncaoCargo.add(jrbFuncaoCargoVisualizar);
        jrbFuncaoCargoVisualizar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbFuncaoCargoVisualizar.setText("Visualizar");
        jrbFuncaoCargoVisualizar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbFuncaoCargoVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbFuncaoCargoVisualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpCadastroFuncaoCargoLayout = new javax.swing.GroupLayout(jpCadastroFuncaoCargo);
        jpCadastroFuncaoCargo.setLayout(jpCadastroFuncaoCargoLayout);
        jpCadastroFuncaoCargoLayout.setHorizontalGroup(
            jpCadastroFuncaoCargoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroFuncaoCargoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCadastroFuncaoCargoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbFuncaoCargoCadastrar)
                    .addComponent(jrbFuncaoCargoVisualizar))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jpCadastroFuncaoCargoLayout.setVerticalGroup(
            jpCadastroFuncaoCargoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroFuncaoCargoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrbFuncaoCargoCadastrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbFuncaoCargoVisualizar)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jpCadastroAluno.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Aluno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jpCadastroAluno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btgCadastroAluno.add(jrbAlunoCadastrar);
        jrbAlunoCadastrar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbAlunoCadastrar.setText("Cadastrar");
        jrbAlunoCadastrar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbAlunoCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAlunoCadastrarActionPerformed(evt);
            }
        });

        btgCadastroAluno.add(jrbAlunoVisualizar);
        jrbAlunoVisualizar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbAlunoVisualizar.setText("Visualizar");
        jrbAlunoVisualizar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbAlunoVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAlunoVisualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpCadastroAlunoLayout = new javax.swing.GroupLayout(jpCadastroAluno);
        jpCadastroAluno.setLayout(jpCadastroAlunoLayout);
        jpCadastroAlunoLayout.setHorizontalGroup(
            jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroAlunoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbAlunoCadastrar)
                    .addComponent(jrbAlunoVisualizar))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jpCadastroAlunoLayout.setVerticalGroup(
            jpCadastroAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroAlunoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrbAlunoCadastrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbAlunoVisualizar)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jpCadastroUsuario.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Usuário", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jpCadastroUsuario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btgCadastroUsuario.add(jrbUsuarioCadastrar);
        jrbUsuarioCadastrar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbUsuarioCadastrar.setText("Cadastrar");
        jrbUsuarioCadastrar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbUsuarioCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbUsuarioCadastrarActionPerformed(evt);
            }
        });

        btgCadastroUsuario.add(jrbUsuarioVisualizar);
        jrbUsuarioVisualizar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbUsuarioVisualizar.setText("Visualizar");
        jrbUsuarioVisualizar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbUsuarioVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbUsuarioVisualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpCadastroUsuarioLayout = new javax.swing.GroupLayout(jpCadastroUsuario);
        jpCadastroUsuario.setLayout(jpCadastroUsuarioLayout);
        jpCadastroUsuarioLayout.setHorizontalGroup(
            jpCadastroUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCadastroUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbUsuarioCadastrar)
                    .addComponent(jrbUsuarioVisualizar))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jpCadastroUsuarioLayout.setVerticalGroup(
            jpCadastroUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrbUsuarioCadastrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbUsuarioVisualizar)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jpCadastroServidor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Servidor", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jpCadastroServidor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btgCadastroServidor.add(jrbServidorCadastrar);
        jrbServidorCadastrar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbServidorCadastrar.setText("Cadastrar");
        jrbServidorCadastrar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbServidorCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbServidorCadastrarActionPerformed(evt);
            }
        });

        btgCadastroServidor.add(jrbServidorVisualizar);
        jrbServidorVisualizar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbServidorVisualizar.setText("Visualizar");
        jrbServidorVisualizar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbServidorVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbServidorVisualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpCadastroServidorLayout = new javax.swing.GroupLayout(jpCadastroServidor);
        jpCadastroServidor.setLayout(jpCadastroServidorLayout);
        jpCadastroServidorLayout.setHorizontalGroup(
            jpCadastroServidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroServidorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCadastroServidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbServidorCadastrar)
                    .addComponent(jrbServidorVisualizar))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jpCadastroServidorLayout.setVerticalGroup(
            jpCadastroServidorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroServidorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrbServidorCadastrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbServidorVisualizar)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jpCadastroLicenca.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Licença", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jpCadastroLicenca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btgCadastroLicenca.add(jrbLicencaCadastrar);
        jrbLicencaCadastrar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbLicencaCadastrar.setText("Cadastrar");
        jrbLicencaCadastrar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbLicencaCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbLicencaCadastrarActionPerformed(evt);
            }
        });

        btgCadastroLicenca.add(jrbLicencaVisualizar);
        jrbLicencaVisualizar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbLicencaVisualizar.setText("Visualizar");
        jrbLicencaVisualizar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbLicencaVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbLicencaVisualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpCadastroLicencaLayout = new javax.swing.GroupLayout(jpCadastroLicenca);
        jpCadastroLicenca.setLayout(jpCadastroLicencaLayout);
        jpCadastroLicencaLayout.setHorizontalGroup(
            jpCadastroLicencaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroLicencaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCadastroLicencaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbLicencaCadastrar)
                    .addComponent(jrbLicencaVisualizar))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jpCadastroLicencaLayout.setVerticalGroup(
            jpCadastroLicencaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroLicencaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrbLicencaCadastrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbLicencaVisualizar)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jpCadastroRestricao.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Restrição", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jpCadastroRestricao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btgCadastroRestricao.add(jrbRestricaoCadastrar);
        jrbRestricaoCadastrar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbRestricaoCadastrar.setText("Cadastrar");
        jrbRestricaoCadastrar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbRestricaoCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbRestricaoCadastrarActionPerformed(evt);
            }
        });

        btgCadastroRestricao.add(jrbRestricaoVisualizar);
        jrbRestricaoVisualizar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbRestricaoVisualizar.setText("Visualizar");
        jrbRestricaoVisualizar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbRestricaoVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbRestricaoVisualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpCadastroRestricaoLayout = new javax.swing.GroupLayout(jpCadastroRestricao);
        jpCadastroRestricao.setLayout(jpCadastroRestricaoLayout);
        jpCadastroRestricaoLayout.setHorizontalGroup(
            jpCadastroRestricaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroRestricaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCadastroRestricaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbRestricaoCadastrar)
                    .addComponent(jrbRestricaoVisualizar))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jpCadastroRestricaoLayout.setVerticalGroup(
            jpCadastroRestricaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroRestricaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrbRestricaoCadastrar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbRestricaoVisualizar)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpPermissoesCadastroLayout = new javax.swing.GroupLayout(jpPermissoesCadastro);
        jpPermissoesCadastro.setLayout(jpPermissoesCadastroLayout);
        jpPermissoesCadastroLayout.setHorizontalGroup(
            jpPermissoesCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPermissoesCadastroLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jpPermissoesCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jpCadastroServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpCadastroCmei, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpPermissoesCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpPermissoesCadastroLayout.createSequentialGroup()
                        .addComponent(jpCadastroAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jpCadastroFuncaoCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jpCadastroUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpPermissoesCadastroLayout.createSequentialGroup()
                        .addComponent(jpCadastroLicenca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jpCadastroRestricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        jpPermissoesCadastroLayout.setVerticalGroup(
            jpPermissoesCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPermissoesCadastroLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jpPermissoesCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpCadastroUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpCadastroFuncaoCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpCadastroAluno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpCadastroCmei, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpPermissoesCadastroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jpCadastroServidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpCadastroLicenca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpCadastroRestricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jtpPermissoes.addTab("Cadastros", jpPermissoesCadastro);

        jpCadastroCmei1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Aluno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        btgImprimirAluno.add(jrbImpressosAlunoPermitir);
        jrbImpressosAlunoPermitir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbImpressosAlunoPermitir.setText("Permitir Impressão");
        jrbImpressosAlunoPermitir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbImpressosAlunoPermitir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbImpressosAlunoPermitirActionPerformed(evt);
            }
        });

        btgImprimirAluno.add(jrbImpressosAlunoNaoPermitir);
        jrbImpressosAlunoNaoPermitir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbImpressosAlunoNaoPermitir.setText("Não Permitir");
        jrbImpressosAlunoNaoPermitir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbImpressosAlunoNaoPermitir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbImpressosAlunoNaoPermitirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpCadastroCmei1Layout = new javax.swing.GroupLayout(jpCadastroCmei1);
        jpCadastroCmei1.setLayout(jpCadastroCmei1Layout);
        jpCadastroCmei1Layout.setHorizontalGroup(
            jpCadastroCmei1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroCmei1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCadastroCmei1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbImpressosAlunoPermitir)
                    .addComponent(jrbImpressosAlunoNaoPermitir))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jpCadastroCmei1Layout.setVerticalGroup(
            jpCadastroCmei1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroCmei1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrbImpressosAlunoPermitir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbImpressosAlunoNaoPermitir)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jpCadastroAluno1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CMEI", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        btgImprimirCmei.add(jrbImpressosCmeiPermitir);
        jrbImpressosCmeiPermitir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbImpressosCmeiPermitir.setText("Permitir Impressão");
        jrbImpressosCmeiPermitir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbImpressosCmeiPermitir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbImpressosCmeiPermitirActionPerformed(evt);
            }
        });

        btgImprimirCmei.add(jrbImpressosCmeiNaoPermitir);
        jrbImpressosCmeiNaoPermitir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbImpressosCmeiNaoPermitir.setText("Não Permitir");
        jrbImpressosCmeiNaoPermitir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jrbImpressosCmeiNaoPermitir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbImpressosCmeiNaoPermitirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpCadastroAluno1Layout = new javax.swing.GroupLayout(jpCadastroAluno1);
        jpCadastroAluno1.setLayout(jpCadastroAluno1Layout);
        jpCadastroAluno1Layout.setHorizontalGroup(
            jpCadastroAluno1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroAluno1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCadastroAluno1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jrbImpressosCmeiPermitir)
                    .addComponent(jrbImpressosCmeiNaoPermitir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpCadastroAluno1Layout.setVerticalGroup(
            jpCadastroAluno1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCadastroAluno1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jrbImpressosCmeiPermitir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbImpressosCmeiNaoPermitir)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jpPermissoesImpressosLayout = new javax.swing.GroupLayout(jpPermissoesImpressos);
        jpPermissoesImpressos.setLayout(jpPermissoesImpressosLayout);
        jpPermissoesImpressosLayout.setHorizontalGroup(
            jpPermissoesImpressosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPermissoesImpressosLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jpCadastroCmei1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jpCadastroAluno1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(415, 415, 415))
        );
        jpPermissoesImpressosLayout.setVerticalGroup(
            jpPermissoesImpressosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpPermissoesImpressosLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jpPermissoesImpressosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jpCadastroAluno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpCadastroCmei1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(153, Short.MAX_VALUE))
        );

        jtpPermissoes.addTab("Impressos", jpPermissoesImpressos);

        jpBotoes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jbNovo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/novo02.png"))); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbNovo.setEnabled(false);
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/OK.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbBuscar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete02.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/reload.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbAlterar.setEnabled(false);
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbImprimir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imprimir.png"))); // NOI18N
        jbImprimir.setText("Imprimir");
        jbImprimir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbImprimir.setEnabled(false);
        jbImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtpPermissoes, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jtpPermissoes, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        cancelar();
}//GEN-LAST:event_jbNovoActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed

        if (btgCadastroAluno.getSelection() == null || btgCadastroCmei.getSelection() == null || btgCadastroFuncaoCargo.getSelection() == null || btgCadastroUsuario.getSelection() == null
            || btgCadastroServidor.getSelection() == null || btgImprimirAluno.getSelection() == null || btgImprimirCmei.getSelection() == null) {

            iniciaClasseGeral();
            classeGeral.msgAtencao("Preencha os campos de Permissões em todas as abas!");

        } else {

            if (opcao.equals("salvar")) {

                salvar();
                opcao = "salvar";

            } else if (opcao.equals("alterar")) {

                atualizar();
                opcao = "salvar";

            }

        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed

        if (jdbp == null) {
            jdbp = new jdBuscaPermissoes(null, true);
        }

        jdbp.setTipoCadastroUsuario(tipoCadastroUsuario);
        jdbp.setVisible(true);

        setPermissaoBuscada(jdbp.getPermissoes());
        jdbp.setPermissoes();
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        cancelar();
}//GEN-LAST:event_jbCancelarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        excluir();
}//GEN-LAST:event_jbExcluirActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed

        abilitaCampos();

        jbNovo.setEnabled(true);
        jbSalvar.setEnabled(true);
        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbExcluir.setEnabled(true);
        jbAlterar.setEnabled(false);
        jbImprimir.setEnabled(true);

        opcao = "alterar";
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jbImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirActionPerformed

        iniciaClasseGeral();
        classeGeral.msgAtencao("Opção de Impressão ainda não disponivel!");

    }//GEN-LAST:event_jbImprimirActionPerformed

    private void jrbCmeiCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCmeiCadastrarActionPerformed
        if (jrbCmeiCadastrar.isSelected()) {
            cadastrarCmei = true;
        }
    }//GEN-LAST:event_jrbCmeiCadastrarActionPerformed

    private void jrbCmeiVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbCmeiVisualizarActionPerformed
        if (jrbCmeiVisualizar.isSelected()) {
            cadastrarCmei = false;
        }
    }//GEN-LAST:event_jrbCmeiVisualizarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jrbFuncaoCargoCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbFuncaoCargoCadastrarActionPerformed
        if (jrbFuncaoCargoCadastrar.isSelected()) {
            cadastrarFuncaoCargo = true;
        }
    }//GEN-LAST:event_jrbFuncaoCargoCadastrarActionPerformed

    private void jrbFuncaoCargoVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbFuncaoCargoVisualizarActionPerformed
        if (jrbFuncaoCargoVisualizar.isSelected()) {
            cadastrarFuncaoCargo = false;
        }
    }//GEN-LAST:event_jrbFuncaoCargoVisualizarActionPerformed

    private void jrbAlunoCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAlunoCadastrarActionPerformed
        if (jrbAlunoCadastrar.isSelected()) {
            cadastrarAluno = true;
        }
    }//GEN-LAST:event_jrbAlunoCadastrarActionPerformed

    private void jrbAlunoVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAlunoVisualizarActionPerformed
        if (jrbAlunoVisualizar.isSelected()) {
            cadastrarAluno = false;
        }
    }//GEN-LAST:event_jrbAlunoVisualizarActionPerformed

    private void jrbUsuarioCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbUsuarioCadastrarActionPerformed
        if (jrbUsuarioCadastrar.isSelected()) {
            cadastrarUsuario = true;
        }
    }//GEN-LAST:event_jrbUsuarioCadastrarActionPerformed

    private void jrbUsuarioVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbUsuarioVisualizarActionPerformed
        if (jrbUsuarioVisualizar.isSelected()) {
            cadastrarUsuario = false;
        }
    }//GEN-LAST:event_jrbUsuarioVisualizarActionPerformed

    private void jrbServidorCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbServidorCadastrarActionPerformed
        if (jrbServidorCadastrar.isSelected()) {
            cadastrarServidor = true;
        }
    }//GEN-LAST:event_jrbServidorCadastrarActionPerformed

    private void jrbServidorVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbServidorVisualizarActionPerformed
        if (jrbServidorVisualizar.isSelected()) {
            cadastrarServidor = false;
        }
    }//GEN-LAST:event_jrbServidorVisualizarActionPerformed

    private void jrbImpressosAlunoPermitirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbImpressosAlunoPermitirActionPerformed
        if (jrbImpressosAlunoPermitir.isSelected()) {
            imprimirAluno = true;
        }
    }//GEN-LAST:event_jrbImpressosAlunoPermitirActionPerformed

    private void jrbImpressosAlunoNaoPermitirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbImpressosAlunoNaoPermitirActionPerformed
        if (jrbImpressosAlunoNaoPermitir.isSelected()) {
            imprimirAluno = false;
        }
    }//GEN-LAST:event_jrbImpressosAlunoNaoPermitirActionPerformed

    private void jrbImpressosCmeiPermitirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbImpressosCmeiPermitirActionPerformed
        if (jrbImpressosCmeiPermitir.isSelected()) {
            imprimirCmei = true;
        }
    }//GEN-LAST:event_jrbImpressosCmeiPermitirActionPerformed

    private void jrbImpressosCmeiNaoPermitirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbImpressosCmeiNaoPermitirActionPerformed
        if (jrbImpressosCmeiNaoPermitir.isSelected()) {
            imprimirCmei = false;
        }
    }//GEN-LAST:event_jrbImpressosCmeiNaoPermitirActionPerformed

    private void jrbLicencaCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbLicencaCadastrarActionPerformed
        if (jrbLicencaCadastrar.isSelected()) {
            cadastrarLicenca = true;
        }
    }//GEN-LAST:event_jrbLicencaCadastrarActionPerformed

    private void jrbLicencaVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbLicencaVisualizarActionPerformed
        if (jrbLicencaVisualizar.isSelected()) {
            cadastrarLicenca = false;
        }
    }//GEN-LAST:event_jrbLicencaVisualizarActionPerformed

    private void jrbRestricaoCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbRestricaoCadastrarActionPerformed
        if (jrbRestricaoCadastrar.isSelected()) {
            cadastrarRestricao = true;
        }
    }//GEN-LAST:event_jrbRestricaoCadastrarActionPerformed

    private void jrbRestricaoVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbRestricaoVisualizarActionPerformed
        if (jrbRestricaoVisualizar.isSelected()) {
            cadastrarRestricao = false;
        }
    }//GEN-LAST:event_jrbRestricaoVisualizarActionPerformed

    /**
    * @param args the command line arguments
    */
    /*public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfPermissoes().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgCadastroAluno;
    private javax.swing.ButtonGroup btgCadastroCmei;
    private javax.swing.ButtonGroup btgCadastroFuncaoCargo;
    private javax.swing.ButtonGroup btgCadastroLicenca;
    private javax.swing.ButtonGroup btgCadastroRestricao;
    private javax.swing.ButtonGroup btgCadastroServidor;
    private javax.swing.ButtonGroup btgCadastroUsuario;
    private javax.swing.ButtonGroup btgImprimirAluno;
    private javax.swing.ButtonGroup btgImprimirCmei;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbImprimir;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPanel jpCadastroAluno;
    private javax.swing.JPanel jpCadastroAluno1;
    private javax.swing.JPanel jpCadastroCmei;
    private javax.swing.JPanel jpCadastroCmei1;
    private javax.swing.JPanel jpCadastroFuncaoCargo;
    private javax.swing.JPanel jpCadastroLicenca;
    private javax.swing.JPanel jpCadastroRestricao;
    private javax.swing.JPanel jpCadastroServidor;
    private javax.swing.JPanel jpCadastroUsuario;
    private javax.swing.JPanel jpCadastroUsuario3;
    private javax.swing.JPanel jpPermissoesCadastro;
    private javax.swing.JPanel jpPermissoesImpressos;
    private javax.swing.JRadioButton jrbAlunoCadastrar;
    private javax.swing.JRadioButton jrbAlunoVisualizar;
    private javax.swing.JRadioButton jrbCmeiCadastrar;
    private javax.swing.JRadioButton jrbCmeiVisualizar;
    private javax.swing.JRadioButton jrbFuncaoCargoCadastrar;
    private javax.swing.JRadioButton jrbFuncaoCargoVisualizar;
    private javax.swing.JRadioButton jrbImpressosAlunoNaoPermitir;
    private javax.swing.JRadioButton jrbImpressosAlunoPermitir;
    private javax.swing.JRadioButton jrbImpressosCmeiNaoPermitir;
    private javax.swing.JRadioButton jrbImpressosCmeiPermitir;
    private javax.swing.JRadioButton jrbLicencaCadastrar;
    private javax.swing.JRadioButton jrbLicencaVisualizar;
    private javax.swing.JRadioButton jrbRestricaoCadastrar;
    private javax.swing.JRadioButton jrbRestricaoVisualizar;
    private javax.swing.JRadioButton jrbServidorCadastrar;
    private javax.swing.JRadioButton jrbServidorCadastrar2;
    private javax.swing.JRadioButton jrbServidorVisualizar;
    private javax.swing.JRadioButton jrbServidorVisualizar2;
    private javax.swing.JRadioButton jrbUsuarioCadastrar;
    private javax.swing.JRadioButton jrbUsuarioVisualizar;
    private javax.swing.JTabbedPane jtpPermissoes;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {

        dao = null;
        this.dispose();
    }

    public void cancelar() {

        btgCadastroAluno.clearSelection();
        btgCadastroCmei.clearSelection();
        btgCadastroFuncaoCargo.clearSelection();
        btgCadastroLicenca.clearSelection();
        btgCadastroRestricao.clearSelection();
        btgCadastroUsuario.clearSelection();
        btgCadastroServidor.clearSelection();
        btgImprimirAluno.clearSelection();
        btgImprimirCmei.clearSelection();

        abilitaCampos();
        
        permissoes = null;

    }

    public void abilitaCampos() {

        if (tipoCadastroUsuario.equals("GERAL")) {
            jrbCmeiCadastrar.setEnabled(true);
            jrbFuncaoCargoCadastrar.setEnabled(true);
            
        } else {
            jrbCmeiCadastrar.setEnabled(false);
            jrbFuncaoCargoCadastrar.setEnabled(true);
        }

        jrbAlunoCadastrar.setEnabled(true);
        jrbAlunoVisualizar.setEnabled(true);
        jrbCmeiVisualizar.setEnabled(true);
        jrbFuncaoCargoVisualizar.setEnabled(true);
        jrbLicencaCadastrar.setEnabled(true);
        jrbLicencaVisualizar.setEnabled(true);
        jrbRestricaoCadastrar.setEnabled(true);
        jrbRestricaoVisualizar.setEnabled(true);
        jrbServidorCadastrar.setEnabled(true);
        jrbServidorVisualizar.setEnabled(true);
        jrbUsuarioCadastrar.setEnabled(true);
        jrbUsuarioVisualizar.setEnabled(true);
        jrbImpressosAlunoNaoPermitir.setEnabled(true);
        jrbImpressosAlunoPermitir.setEnabled(true);
        jrbImpressosCmeiNaoPermitir.setEnabled(true);
        jrbImpressosCmeiPermitir.setEnabled(true);

    }

    public void desabilitaCampos() {

        jrbAlunoCadastrar.setEnabled(false);
        jrbAlunoVisualizar.setEnabled(false);
        jrbFuncaoCargoCadastrar.setEnabled(false);
        jrbFuncaoCargoVisualizar.setEnabled(false);
        jrbLicencaCadastrar.setEnabled(false);
        jrbLicencaVisualizar.setEnabled(false);
        jrbRestricaoCadastrar.setEnabled(false);
        jrbRestricaoVisualizar.setEnabled(false);
        jrbServidorCadastrar.setEnabled(false);
        jrbServidorVisualizar.setEnabled(false);
        jrbUsuarioCadastrar.setEnabled(false);
        jrbUsuarioVisualizar.setEnabled(false);
        jrbCmeiCadastrar.setEnabled(false);
        jrbCmeiVisualizar.setEnabled(false);
        jrbImpressosAlunoNaoPermitir.setEnabled(false);
        jrbImpressosAlunoPermitir.setEnabled(false);
        jrbImpressosCmeiNaoPermitir.setEnabled(false);
        jrbImpressosCmeiPermitir.setEnabled(false);

    }

    public void abilitaBotoes() {

        jbNovo.setEnabled(true);
        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbImprimir.setEnabled(true);
        jbSalvar.setEnabled(false);
        jbExcluir.setEnabled(true);
        jbAlterar.setEnabled(true);

    }

    public void desabilitaBotoes() {

        jbNovo.setEnabled(false);
        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbImprimir.setEnabled(false);
        jbSalvar.setEnabled(true);
        jbExcluir.setEnabled(false);
        jbAlterar.setEnabled(false);

    }

//Geradores, Validadores===========================================================================================================================================
    public void iniciaClasseGeral() {
        
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
    
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }
    
    public void iniciaPermissoes() {
        
        if (permissoes == null) {
            permissoes = new Permissoes();
        }
        
    }
    
    public void verificaUsuarioCadastrado() {

        iniciaDao();
        //DAO dao = new DAO();
        Permissoes permiss;
        
        permiss = (Permissoes) dao.buscaPermissoes(nomeUsuario);
        
        if (permiss == null) {
            opcao = "salvar";
        } else {

            iniciaPermissoes();
            
            permissoes = (Permissoes) dao.buscaPermissoes(nomeUsuario);
            setPermissaoBuscada(permissoes);
            opcao = "alterar";
        }
        
    }

//Getters and Setters===========================================================================================================================================
    public String getNomeUsuario() {
        return nomeUsuario;
    }

    public void setNomeUsuario(String nomeUsuario) {
        this.nomeUsuario = nomeUsuario;
        verificaUsuarioCadastrado();
    }

    public String getTipoCadastroUsuario() {
        return tipoCadastroUsuario;
    }

    public void setTipoCadastroUsuario(String tipoCadastroUsuario) {
        this.tipoCadastroUsuario = tipoCadastroUsuario;
    }

    public void setPermissaoBuscada(Permissoes permissoesBuscadas) {

        if (permissoesBuscadas.getNomeUsuario().isEmpty()) {
        } else {

            int codigoAux;

            codigo = permissoesBuscadas.getCodigoPermissoes();
            codigoAux = permissoesBuscadas.getCodigoPermissoes();
            nomeUsuario = permissoesBuscadas.getNomeUsuario();

            if (permissoesBuscadas.isCadastrarAluno()) {
                jrbAlunoCadastrar.setSelected(true);
                cadastrarAluno = true;
            } else {
                jrbAlunoVisualizar.setSelected(true);
                cadastrarAluno = false;
            }

            if (permissoesBuscadas.isCadastrarCmei()) {
                jrbCmeiCadastrar.setSelected(true);
                cadastrarCmei = true;
            } else {
                jrbCmeiVisualizar.setSelected(true);
                cadastrarCmei = false;
            }

            if (permissoesBuscadas.isCadastrarFuncaoCargo()) {
                jrbFuncaoCargoCadastrar.setSelected(true);
                cadastrarFuncaoCargo = true;
            } else {
                jrbFuncaoCargoVisualizar.setSelected(true);
                cadastrarFuncaoCargo = false;
            }

            if (permissoesBuscadas.isCadastrarLicenca()) {
                jrbLicencaCadastrar.setSelected(true);
                cadastrarLicenca = true;
            } else {
                jrbLicencaVisualizar.setSelected(true);
                cadastrarLicenca = false;
            }
            
            if (permissoesBuscadas.isCadastrarRestricao()) {
                jrbRestricaoCadastrar.setSelected(true);
                cadastrarRestricao = true;
            } else {
                jrbRestricaoVisualizar.setSelected(true);
                cadastrarRestricao = false;
            }
            
            if (permissoesBuscadas.isCadastrarServidor()) {
                jrbServidorCadastrar.setSelected(true);
                cadastrarServidor = true;
            } else {
                jrbServidorVisualizar.setSelected(true);
                cadastrarServidor = false;
            }

            if (permissoesBuscadas.isCadastrarUsuario()) {
                jrbUsuarioCadastrar.setSelected(true);
                cadastrarUsuario = true;
            } else {
                jrbUsuarioVisualizar.setSelected(true);
                cadastrarUsuario = false;
            }

            if (permissoesBuscadas.isImprimirAluno()) {
                jrbImpressosAlunoPermitir.setSelected(true);
                imprimirAluno = true;
            } else {
                jrbImpressosAlunoNaoPermitir.setSelected(true);
                imprimirAluno = false;
            }

            if (permissoesBuscadas.isImprimirCmei()){
                jrbImpressosCmeiPermitir.setSelected(true);
                imprimirCmei = true;
            } else {
                jrbImpressosCmeiNaoPermitir.setSelected(true);
                imprimirCmei = false;
            }

            desabilitaCampos();
            abilitaBotoes();

        }

    }

//Metodos DAO===========================================================================================================================================
    public void salvar() {

        iniciaDao();
        iniciaPermissoes();
        //DAO dao = new DAO();

        permissoes.setCadastrarAluno(cadastrarAluno);
        permissoes.setCadastrarCmei(cadastrarCmei);
        permissoes.setCadastrarFuncaoCargo(cadastrarFuncaoCargo);
        permissoes.setCadastrarLicenca(cadastrarLicenca);
        permissoes.setCadastrarRestricao(cadastrarRestricao);
        permissoes.setCadastrarServidor(cadastrarServidor);
        permissoes.setCadastrarUsuario(cadastrarUsuario);
        permissoes.setImprimirAluno(imprimirAluno);
        permissoes.setImprimirCmei(imprimirCmei);
        permissoes.setNomeUsuario(nomeUsuario);

        dao.inserir(permissoes, 7);
        cancelar();

    }

    public void atualizar() {

        iniciaDao();
        iniciaPermissoes();
        //DAO dao = new DAO();

        permissoes.setCadastrarAluno(cadastrarAluno);
        permissoes.setCadastrarCmei(cadastrarCmei);
        permissoes.setCadastrarFuncaoCargo(cadastrarFuncaoCargo);
        permissoes.setCadastrarLicenca(cadastrarLicenca);
        permissoes.setCadastrarRestricao(cadastrarRestricao);
        permissoes.setCadastrarServidor(cadastrarServidor);
        permissoes.setCadastrarUsuario(cadastrarUsuario);
        permissoes.setImprimirAluno(imprimirAluno);
        permissoes.setImprimirCmei(imprimirCmei);
        permissoes.setNomeUsuario(nomeUsuario);

        dao.atualizar(permissoes, 7);
        cancelar();

    }

    public void excluir() {

        iniciaClasseGeral();

        if (classeGeral.msgConfirma("Deseja excluir as permissões do usuário ?")) {

            iniciaDao();
            //DAO dao = new DAO();
            dao.excluir(permissoes, 7);
            cancelar();

        }

    }

}
