/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package visual;

import controlador.ClasseGeral;
import controlador.ControleImagem;
import controlador.ControleVersao;
import controlador.EditaOrdemTabela;
import controlador.FixedLengthDocument;
import controlador.Formatos;
import dao.DAO;
import java.awt.Image;
import java.awt.Toolkit;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import modelo.TransferenciaAluno;

/**
 *
 * @author luizam
 */
public class jfVisualizaTransferenciasAluno extends javax.swing.JFrame {

    private static ControleVersao versao = new ControleVersao();
    private ClasseGeral classeGeral;
    private ControleImagem controleImagem = new ControleImagem();
    private DAO dao;
    private EditaOrdemTabela editaOrdemTabela;
    
    private Formatos formatos = new Formatos();
    private TransferenciaAluno transferenciaAluno;
    
    private DefaultTableModel modelo;
    
    /**
     * Creates new form jfVisualizaTransferenciasServidor
     */
    public jfVisualizaTransferenciasAluno() {
        super("Visualização Transferência de Aluno - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        this.setResizable(false);

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage(controleImagem.getIconeImagem());
        this.setIconImage(img);

        //maximiza tela
        //this.setExtendedState(MAXIMIZED_BOTH);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);
        
        try {
            jftfBuscaCpfPaiMae.setFormatterFactory(formatos.getFormatoCpf());
        } catch (ParseException ex) {
            iniciaClasseGeral();
            Logger.getLogger(jfCadastroCmei.class.getName()).log(Level.SEVERE, null, ex);
            classeGeral.msgErro("Não foi possivel formatar campos de CPF, \n Contate o Administrador!");
        }
        
        setNumeroCaracteres();
        
        preencheComboCmeis();
        preencheComboCmeis2();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpmBuscaMotivoTransferencia = new javax.swing.JPopupMenu();
        jmiMotivoTransferencia = new javax.swing.JMenuItem();
        jpVisualizaTransferenciaAluno = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtfBuscaNomeAluno = new javax.swing.JTextField();
        jftfBuscaCpfPaiMae = new javax.swing.JFormattedTextField();
        jcbBuscaEntidadeAnterior = new javax.swing.JComboBox();
        jcbBuscaEntidadeAtual = new javax.swing.JComboBox();
        jDateChooserDataTransferenciaInicio = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jDateChooserDataTransferenciaTermino = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbVisualizaTransferenciaAluno = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jtfBuscaNomePaiMae = new javax.swing.JTextField();
        jpBotoes = new javax.swing.JPanel();
        jbBuscaFechar = new javax.swing.JButton();
        jbBuscaCancelar = new javax.swing.JButton();
        jbBuscaPesquisar = new javax.swing.JButton();

        jmiMotivoTransferencia.setText("Motivo Transferência");
        jmiMotivoTransferencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiMotivoTransferenciaActionPerformed(evt);
            }
        });
        jpmBuscaMotivoTransferencia.add(jmiMotivoTransferencia);

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpVisualizaTransferenciaAluno.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Nome Aluno: ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Filiação Pai / Mãe: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Entidade Anterior: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Entidade Atual: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("CPF Pai / Mae: ");

        jtfBuscaNomeAluno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfBuscaNomeAluno.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jftfBuscaCpfPaiMae.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jftfBuscaCpfPaiMae.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jcbBuscaEntidadeAnterior.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbBuscaEntidadeAnterior.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jcbBuscaEntidadeAtual.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbBuscaEntidadeAtual.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jDateChooserDataTransferenciaInicio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserDataTransferenciaInicio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("até");

        jDateChooserDataTransferenciaTermino.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jDateChooserDataTransferenciaTermino.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jtbVisualizaTransferenciaAluno.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtbVisualizaTransferenciaAluno.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Matrícula", "Filiação Mãe", "Filiação Pai", "Entidade Anterior", "Entidade Atual", "Data Transferência", "Código Transferência"
            }
        ));
        jtbVisualizaTransferenciaAluno.setToolTipText("Há opções clicando com o botão direito na tabela!");
        jtbVisualizaTransferenciaAluno.setComponentPopupMenu(jpmBuscaMotivoTransferencia);
        jtbVisualizaTransferenciaAluno.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jtbVisualizaTransferenciaAluno.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jtbVisualizaTransferenciaAluno);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Período Transferência: ");

        jtfBuscaNomePaiMae.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfBuscaNomePaiMae.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jpVisualizaTransferenciaAlunoLayout = new javax.swing.GroupLayout(jpVisualizaTransferenciaAluno);
        jpVisualizaTransferenciaAluno.setLayout(jpVisualizaTransferenciaAlunoLayout);
        jpVisualizaTransferenciaAlunoLayout.setHorizontalGroup(
            jpVisualizaTransferenciaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpVisualizaTransferenciaAlunoLayout.createSequentialGroup()
                .addGroup(jpVisualizaTransferenciaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpVisualizaTransferenciaAlunoLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(jpVisualizaTransferenciaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpVisualizaTransferenciaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpVisualizaTransferenciaAlunoLayout.createSequentialGroup()
                                .addComponent(jDateChooserDataTransferenciaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateChooserDataTransferenciaTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpVisualizaTransferenciaAlunoLayout.createSequentialGroup()
                                .addGroup(jpVisualizaTransferenciaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jcbBuscaEntidadeAtual, javax.swing.GroupLayout.Alignment.LEADING, 0, 427, Short.MAX_VALUE)
                                    .addComponent(jcbBuscaEntidadeAnterior, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtfBuscaNomeAluno)
                                    .addComponent(jtfBuscaNomePaiMae, javax.swing.GroupLayout.Alignment.LEADING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jftfBuscaCpfPaiMae, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 98, Short.MAX_VALUE))
                    .addGroup(jpVisualizaTransferenciaAlunoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jpVisualizaTransferenciaAlunoLayout.setVerticalGroup(
            jpVisualizaTransferenciaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpVisualizaTransferenciaAlunoLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jpVisualizaTransferenciaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfBuscaNomeAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jftfBuscaCpfPaiMae, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpVisualizaTransferenciaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfBuscaNomePaiMae, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpVisualizaTransferenciaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcbBuscaEntidadeAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpVisualizaTransferenciaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jcbBuscaEntidadeAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpVisualizaTransferenciaAlunoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jDateChooserDataTransferenciaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jDateChooserDataTransferenciaTermino, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE)
                .addContainerGap())
        );

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbBuscaFechar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaFechar.setText("Fechar");
        jbBuscaFechar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaFecharActionPerformed(evt);
            }
        });

        jbBuscaCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbBuscaCancelar.setText("Cancelar");
        jbBuscaCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaCancelarActionPerformed(evt);
            }
        });

        jbBuscaPesquisar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscaPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        jbBuscaPesquisar.setText("Pesquisar");
        jbBuscaPesquisar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscaPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscaPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbBuscaPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscaFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbBuscaFechar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscaCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscaPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpVisualizaTransferenciaAluno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpVisualizaTransferenciaAluno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscaFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaFecharActionPerformed
        fechar();
    }//GEN-LAST:event_jbBuscaFecharActionPerformed

    private void jbBuscaCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaCancelarActionPerformed
        cancelar();
    }//GEN-LAST:event_jbBuscaCancelarActionPerformed

    private void jbBuscaPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscaPesquisarActionPerformed
        pesquisar();
    }//GEN-LAST:event_jbBuscaPesquisarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jmiMotivoTransferenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiMotivoTransferenciaActionPerformed
        
        
    }//GEN-LAST:event_jmiMotivoTransferenciaActionPerformed

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jfVisualizaTransferenciasServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jfVisualizaTransferenciasServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jfVisualizaTransferenciasServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jfVisualizaTransferenciasServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /*
         * Create and display the form
         */
        /*java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new jfVisualizaTransferenciasServidor().setVisible(true);
            }
        });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser jDateChooserDataTransferenciaInicio;
    private com.toedter.calendar.JDateChooser jDateChooserDataTransferenciaTermino;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbBuscaCancelar;
    private javax.swing.JButton jbBuscaFechar;
    private javax.swing.JButton jbBuscaPesquisar;
    private javax.swing.JComboBox jcbBuscaEntidadeAnterior;
    private javax.swing.JComboBox jcbBuscaEntidadeAtual;
    private javax.swing.JFormattedTextField jftfBuscaCpfPaiMae;
    private javax.swing.JMenuItem jmiMotivoTransferencia;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPanel jpVisualizaTransferenciaAluno;
    private javax.swing.JPopupMenu jpmBuscaMotivoTransferencia;
    private javax.swing.JTable jtbVisualizaTransferenciaAluno;
    private javax.swing.JTextField jtfBuscaNomeAluno;
    private javax.swing.JTextField jtfBuscaNomePaiMae;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {

        cancelar();
        this.dispose();

    }
    
    public void cancelar() {
        
        iniciaDefaultTable();
        
        jtfBuscaNomeAluno.setText("");
        jftfBuscaCpfPaiMae.setText("");
        jcbBuscaEntidadeAnterior.setSelectedIndex(0);
        jcbBuscaEntidadeAtual.setSelectedIndex(0);
        jDateChooserDataTransferenciaInicio.setDate(null);
        jDateChooserDataTransferenciaTermino.setDate(null);
        
        modelo.setRowCount(0);
        
    }

    public void preencheComboCmeis() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaCmeis = new ArrayList();

        jcbBuscaEntidadeAnterior.removeAllItems();
        jcbBuscaEntidadeAnterior.addItem("");

        listaCmeis = dao.listarCmeis();

        for (int i = 0; i < listaCmeis.size(); i++) {
            jcbBuscaEntidadeAnterior.addItem(listaCmeis.get(i));
        }

    }
    
    public void preencheComboCmeis2() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaCmeis = new ArrayList();

        jcbBuscaEntidadeAtual.removeAllItems();
        jcbBuscaEntidadeAtual.addItem("");

        listaCmeis = dao.listarCmeis();

        for (int i = 0; i < listaCmeis.size(); i++) {
            jcbBuscaEntidadeAtual.addItem(listaCmeis.get(i));
        }

    }
    
    public void pesquisar() {
        
        iniciaDao();
        iniciaDefaultTable();
        final TableRowSorter<TableModel> tabelaSorter = new TableRowSorter<TableModel>(modelo);
        jtbVisualizaTransferenciaAluno.setRowSorter(tabelaSorter);
        
        iniciaTransferenciaAluno();
        List listaAlunos = new ArrayList();
        String cpfPaiMae;
        String nomeAluno;
        String nomeEntidadeAnterior;
        String nomeEntidadeAtual;
        
        if (jftfBuscaCpfPaiMae.getText().equals("   .   .   -  ")) {
            cpfPaiMae = "";
        } else {
            cpfPaiMae = jftfBuscaCpfPaiMae.getText();
        }
        
        if (jtfBuscaNomeAluno.getText().isEmpty()) {
            nomeAluno = "";
        } else {
            nomeAluno = jtfBuscaNomeAluno.getText();
        }
        
        if (jcbBuscaEntidadeAnterior.getSelectedIndex() != 0) {
            nomeEntidadeAnterior = jcbBuscaEntidadeAnterior.getSelectedItem().toString();
        } else {
            nomeEntidadeAnterior = "";
        }
        
        if (jcbBuscaEntidadeAtual.getSelectedIndex() != 0) {
            nomeEntidadeAtual = jcbBuscaEntidadeAtual.getSelectedItem().toString();
        } else {
            nomeEntidadeAtual = "";
        } 
        
        if (jDateChooserDataTransferenciaInicio.getDate() == null) {
            listaAlunos = dao.listarTransferenciasAlunos(jtfBuscaNomeAluno.getText(), cpfPaiMae, jtfBuscaNomePaiMae.getText(), nomeEntidadeAnterior, nomeEntidadeAtual, null, jDateChooserDataTransferenciaTermino.getDate());
        } else {
            listaAlunos = dao.listarTransferenciasAlunos(jtfBuscaNomeAluno.getText(), cpfPaiMae, jtfBuscaNomePaiMae.getText(), nomeEntidadeAnterior, nomeEntidadeAtual, jDateChooserDataTransferenciaInicio.getDate(), jDateChooserDataTransferenciaTermino.getDate());
        }
        
        modelo.setRowCount(0);
        iniciaEditaOrdemTabela();
        
        for (int i = 0; i < listaAlunos.size(); i++) {
            
            transferenciaAluno = (TransferenciaAluno) listaAlunos.get(i);
            
            modelo.addRow(new String[]{transferenciaAluno.getNomeAluno(), transferenciaAluno.getMatriculaAluno(), transferenciaAluno.getFiliacaoMae(), transferenciaAluno.getFiliacaoPai(), transferenciaAluno.getNomeEntidadeAnterior(), transferenciaAluno.getNomeEntidadeAtual(), String.valueOf(transferenciaAluno.getDataTransferencia()), String.valueOf(transferenciaAluno.getCodigoTransferenciaAluno())});
            
        }
        
        if (jtbVisualizaTransferenciaAluno.getRowCount() > 0) {
            jtbVisualizaTransferenciaAluno.getSelectionModel().setSelectionInterval(0, 0);
        }
        
    }
    
    
//Geradores, Validadores===========================================================================================================================================
    public void iniciaClasseGeral() {
    
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
    
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }

    public void iniciaDefaultTable() {
        
        if (modelo == null) {
            modelo = (DefaultTableModel) jtbVisualizaTransferenciaAluno.getModel();
        }
        
    }
    
    public void iniciaEditaOrdemTabela() {
        
        if (editaOrdemTabela == null) {
            editaOrdemTabela = new EditaOrdemTabela();
        }
        
    }
    
    public void iniciaTransferenciaAluno() {
        
        if (transferenciaAluno == null) {
            transferenciaAluno = new TransferenciaAluno();
        }
        
    }
    
//Getters and Setters===========================================================================================================================================
    public void setNumeroCaracteres() {

        jtfBuscaNomeAluno.setDocument(new FixedLengthDocument(240));

    }

//Metodos DAO===========================================================================================================================================

}
