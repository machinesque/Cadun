/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jfSobre.java
 *
 * Created on 09/08/2010, 14:52:03
 */
package visual;

import controlador.AtualizaBaseDados;
import controlador.ClasseGeral;
import controlador.ConfereDuplicidades;
import controlador.ControleImagem;
import controlador.ControleVersao;
import controlador.VerificadorModalidades;
import dao.DAO;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JOptionPane;
import modelo.Aluno;
import modelo.Cmei;

/**
 *
 * @author luizam
 */
public class jfSobre extends javax.swing.JFrame {

    private static ControleVersao versao = new ControleVersao();
    private DAO dao;
    private Aluno aluno;
    private Cmei cmei;
    private ControleImagem controleImagem = new ControleImagem();
    
    private AtualizaBaseDados atualizaBaseDados = new AtualizaBaseDados();
    private ConfereDuplicidades confereDuplicidades = new ConfereDuplicidades();
    private Thread threadAtualizaBaseDados = new Thread(atualizaBaseDados);
    private Thread threadConfereDuplicidades = new Thread(confereDuplicidades);

    private String nomeUsuario;
    boolean atualizarBancoDadosCadun;
    
    /** Creates new form jfSobre */
    public jfSobre() {
        super("Sobre - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage(controleImagem.getIconeImagem());
        this.setIconImage(img);

        //maximiza tela
        //this.setExtendedState(MAXIMIZED_BOTH);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

        jlbVersao.setText(versao.getVersao());
        jlbAno.setText(versao.getAno());

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jlbVersao = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jlbAno = new javax.swing.JLabel();
        jbAtualizar = new javax.swing.JButton();
        jbAtualizarBancoDados = new javax.swing.JButton();
        jcbNomeEntidade = new javax.swing.JComboBox();
        jbRedefineModalidades = new javax.swing.JButton();
        jbVerificaDuplicidades = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Sistema CADUN, Cadastro Único de Gerenciamento Escolar, da");

        jlbVersao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jlbVersao.setText("versão");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Desenvolvido por: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("L. A. Machinesque");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Equipe Informática Educacional");

        jlbAno.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jlbAno.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbAno.setText("ANO");
        jlbAno.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jlbAno.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jbAtualizar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/reload.png"))); // NOI18N
        jbAtualizar.setText("Atualizar Software");
        jbAtualizar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbAtualizar.setEnabled(false);
        jbAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtualizarActionPerformed(evt);
            }
        });

        jbAtualizarBancoDados.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbAtualizarBancoDados.setText("Atualizar Banco de Dados");
        jbAtualizarBancoDados.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbAtualizarBancoDados.setEnabled(false);
        jbAtualizarBancoDados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAtualizarBancoDadosActionPerformed(evt);
            }
        });

        jcbNomeEntidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbNomeEntidade.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jcbNomeEntidade.setEnabled(false);

        jbRedefineModalidades.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbRedefineModalidades.setText("Redefine Modalidades");
        jbRedefineModalidades.setToolTipText("Este Botão redefine as modalidades dos alunos basenando-se na idade dos mesmos");
        jbRedefineModalidades.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbRedefineModalidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRedefineModalidadesActionPerformed(evt);
            }
        });

        jbVerificaDuplicidades.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbVerificaDuplicidades.setText("Verifica Duplicidades");
        jbVerificaDuplicidades.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbVerificaDuplicidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVerificaDuplicidadesActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Informática Educacional, Versão atual: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addContainerGap(117, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(jlbAno, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlbVersao))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jcbNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jbRedefineModalidades, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jbAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jbAtualizarBancoDados, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jbVerificaDuplicidades, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jlbAno)
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jlbVersao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(31, 31, 31)
                .addComponent(jbVerificaDuplicidades, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbRedefineModalidades, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbAtualizarBancoDados, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jbAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtualizarActionPerformed
        ClasseGeral cg = new ClasseGeral();

        if (cg.msgConfirmaAtualizacao("Deseja atualizar? Ao terminar a atualização, 'REINICIE O COMPUTADOR' para as atualizações entrarem em vigor!")) {
            atualizarSoftware();
        }
    }//GEN-LAST:event_jbAtualizarActionPerformed

    private void jbAtualizarBancoDadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAtualizarBancoDadosActionPerformed
        if (jcbNomeEntidade.getSelectedIndex() != 0) {
            atualizarBaseDados();
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um Cmei antes de atualizar!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
        }
    }//GEN-LAST:event_jbAtualizarBancoDadosActionPerformed

private void jbVerificaDuplicidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVerificaDuplicidadesActionPerformed
    verificarDuplicidades();
}//GEN-LAST:event_jbVerificaDuplicidadesActionPerformed

private void jbRedefineModalidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRedefineModalidadesActionPerformed

    List listaAlunoModalidade = new ArrayList();
    VerificadorModalidades verificadorModalidades = new VerificadorModalidades();
    
    iniciaDao();
    
    listaAlunoModalidade = dao.listarAlunosCadastrados("", "", "", "", "", "", "", "", "");
    
    for (int i = 0; i < listaAlunoModalidade.size(); i++) {
        
        if (aluno == null) {
            aluno = new Aluno();
        }
    
        if (cmei == null) {
            cmei = new Cmei();
        }
        
        aluno = (Aluno) listaAlunoModalidade.get(i);
        aluno.setModalidade(verificadorModalidades.verificaIdadeModalidade(aluno.getDataNascimento()));
        
        if (aluno.getModalidade().equals("ANO")) {
            
            cmei = (Cmei) dao.buscaCmei(aluno.getNomeEntidade(), "", "", "");
            
            aluno.setTipoCadastro("EGRESSO");
            aluno.setDataEgresso(getDateHoje());
            
            cmei.setVagasDisponiveis(cmei.getVagasDisponiveis() + 1);
            
            dao.atualizar(cmei, 0);
            
        }
        
        dao.atualizar(aluno, 0);
        
        aluno = null;
        cmei = null;
        
    }
    
    JOptionPane.showMessageDialog(this, "O Processo de Redefinição de Modallidades Terminou!", "OK", JOptionPane.INFORMATION_MESSAGE, null);
    
    // TODO add your handling code here:
}//GEN-LAST:event_jbRedefineModalidadesActionPerformed
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {

    public void run() {
    new jfSobre().setVisible(true);
    }
    });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton jbAtualizar;
    private javax.swing.JButton jbAtualizarBancoDados;
    private javax.swing.JButton jbRedefineModalidades;
    private javax.swing.JButton jbVerificaDuplicidades;
    private javax.swing.JComboBox jcbNomeEntidade;
    private javax.swing.JLabel jlbAno;
    private javax.swing.JLabel jlbVersao;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {

        this.dispose();

    }

    public void atualizarSoftware() {

        try {
            Process processo2 = Runtime.getRuntime().exec("N:\\AtualizaçãoCadun.exe");
        } catch (IOException ex) {
            //Logger.getLogger(jfSobre.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possivel atualizar, ou é necessário Mapear a Rede!", "Erro", JOptionPane.ERROR_MESSAGE, null);
        }

    }

    public void atualizarBaseDados() {

        atualizaBaseDados.setNomeEntidade(jcbNomeEntidade.getSelectedItem().toString());
        threadAtualizaBaseDados.start();

    }

    public void verificarDuplicidades() {
        
        threadConfereDuplicidades.start();
        
    }
    
    public void abilitaBotoes() {

        if (atualizarBancoDadosCadun) {
            jbAtualizarBancoDados.setEnabled(true);
            jcbNomeEntidade.setEnabled(true);
            preencheComboCmeis();
        }

    }

    public void preencheComboCmeis() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaCmeis = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaCmeis = dao.listarCmeis();

        for (int i = 0; i < listaCmeis.size(); i++) {
            jcbNomeEntidade.addItem(listaCmeis.get(i));
        }

    }

//Geradores, Validadores===========================================================================================================================================
//Getters and Setters===========================================================================================================================================
    public Date getDateHoje() {

        GregorianCalendar calendar = new GregorianCalendar();
        Date data = calendar.getTime();

        return data;

    }
    
    public String getNomeUsuario() {
        return nomeUsuario;
    }

    public void setNomeUsuario(String nomeUsuario) {
        this.nomeUsuario = nomeUsuario;
        getPermissoes();
        abilitaBotoes();
    }

    public void getPermissoes() {
        /*Permissoes permissoes;
        iniciaDao();
        //DAO dao = new DAO();

        permissoes = (Permissoes) dao.buscaPermissoes(getNomeUsuario());

        cadastrarUsuario = permissoes.isCadastrarUsuario();*/

        if (nomeUsuario.equals("LUIZAM")) {
            atualizarBancoDadosCadun = true;
        } else {
            atualizarBancoDadosCadun = false;
        }

    }
//Metodos DAO===========================================================================================================================================
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }
}
