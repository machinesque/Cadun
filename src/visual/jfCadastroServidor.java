/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jfCadastroServidor.java
 *
 * Created on 17/08/2010, 13:27:21
 */
package visual;

import conexao.Conexao;
import controlador.ClasseGeral;
import controlador.ControleCaracteresEspeciais;
import controlador.ControleImagem;
import controlador.ControleLicenca;
import controlador.ControleRestricao;
import controlador.ControleVersao;
import controlador.FixedLengthDocument;
import controlador.Formatos;
import dao.DAO;
import excecoes.ExcCadastro;
import java.awt.Image;
import java.awt.Toolkit;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import modelo.Licenca;
import modelo.Permissoes;
import modelo.Restricao;
import modelo.Servidor;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author luizam
 */
public class jfCadastroServidor extends javax.swing.JFrame {

    private static ControleVersao versao = new ControleVersao();
    private ClasseGeral classeGeral;
    private ControleCaracteresEspeciais controleCaracteresEspeciais;
    private ControleImagem controleImagem = new ControleImagem();
    private ControleLicenca controleLicenca;
    private ControleRestricao controleRestricao;
    private DAO dao;
    private Formatos formatos = new Formatos();
    private Licenca licenca;
    private Restricao restricao;
    private Servidor servidor = new Servidor();
    private Servidor servidorVerificado;

    private jdBuscaServidor jdbs;
    private JasperPrint jPrint;
    private JasperViewer jViewer;

    public int codigo = 0;
    private String nomeUsuario;
    private String tipoCadastroUsuario;
    private String opcao = "salvar";
    
    private boolean cadastrarServidor;

    /** Creates new form jfCadastroServidor */
    public jfCadastroServidor() {
        super("Cadastro Servidores - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage(controleImagem.getIconeImagem());
        this.setIconImage(img);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

        try {
            jftfTelefone.setFormatterFactory(formatos.getFormatoTelefone());
            jftfCelular.setFormatterFactory(formatos.getFormatoTelefone());
        } catch (ParseException ex) {
            iniciaClasseGeral();
            Logger.getLogger(jfCadastroCmei.class.getName()).log(Level.SEVERE, null, ex);
            classeGeral.msgErro("Não foi possivel formatar campo de telefone, \n Contate o Administrador!");
        }

        setNumeroCaracteres();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jtfNomeServidor = new javax.swing.JTextField();
        jtfMatriculaServidor = new javax.swing.JTextField();
        jcbNomeEntidade = new javax.swing.JComboBox();
        jtfEndereco = new javax.swing.JTextField();
        jtfNumeroEndereco = new javax.swing.JTextField();
        jtfMunicipio = new javax.swing.JTextField();
        jcbUf = new javax.swing.JComboBox();
        jcbFuncaoCargo = new javax.swing.JComboBox();
        jcbModalidade = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jtfBairro = new javax.swing.JTextField();
        jftfTelefone = new javax.swing.JFormattedTextField();
        jftfCelular = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        jcbStatusContrato = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jcbLicenca = new javax.swing.JComboBox();
        jcbRestricao = new javax.swing.JComboBox();
        jpBotoes = new javax.swing.JPanel();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbImprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Nome do Servidor: ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Matrícula: ");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Entidade: ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Endereço: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Número: ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Município: ");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("UF: ");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Função / Cargo: ");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Modalidade: ");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Telefone: ");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Celular: ");

        jtfNomeServidor.setBackground(new java.awt.Color(204, 204, 255));
        jtfNomeServidor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfNomeServidor.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jtfMatriculaServidor.setBackground(new java.awt.Color(204, 204, 255));
        jtfMatriculaServidor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfMatriculaServidor.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfMatriculaServidor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfMatriculaServidorFocusLost(evt);
            }
        });

        jcbNomeEntidade.setBackground(new java.awt.Color(204, 204, 255));
        jcbNomeEntidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbNomeEntidade.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 255), null, new java.awt.Color(204, 204, 255)));

        jtfEndereco.setBackground(new java.awt.Color(204, 204, 255));
        jtfEndereco.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfEndereco.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jtfNumeroEndereco.setBackground(new java.awt.Color(204, 204, 255));
        jtfNumeroEndereco.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfNumeroEndereco.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfNumeroEndereco.setNextFocusableComponent(jtfBairro);
        jtfNumeroEndereco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfNumeroEnderecoFocusLost(evt);
            }
        });

        jtfMunicipio.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfMunicipio.setText("CASCAVEL");
        jtfMunicipio.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfMunicipio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfMunicipioFocusLost(evt);
            }
        });

        jcbUf.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbUf.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PE", "PR", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        jcbUf.setSelectedIndex(16);
        jcbUf.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jcbFuncaoCargo.setBackground(new java.awt.Color(204, 204, 255));
        jcbFuncaoCargo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbFuncaoCargo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(204, 204, 255), new java.awt.Color(204, 204, 255), null, new java.awt.Color(204, 204, 255)));
        jcbFuncaoCargo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jcbFuncaoCargoFocusLost(evt);
            }
        });

        jcbModalidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbModalidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "BERÇÁRIO", "MATERNAL I", "MATERNAL II", "MATERNAL III", "PRÉ I", "PRÉ II", "PRÉ III" }));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Bairro: ");

        jtfBairro.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfBairro.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfBairro.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfBairroFocusLost(evt);
            }
        });

        jftfTelefone.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jftfTelefone.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jftfCelular.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jftfCelular.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Status Contrato: ");

        jcbStatusContrato.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbStatusContrato.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CONCURSADO/CONTRATADO", "TRANSFERIDO", "DEMITIDO", "APOSENTADO", "CONTRATO FINALIZADO" }));
        jcbStatusContrato.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Obs.: O Status Contrato Finalizado deve ser utilizado apenas para Estagiários!");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("Licença: ");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setText("Restrição: ");

        jcbLicenca.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbLicenca.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jcbRestricao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbRestricao.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15)
                    .addComponent(jLabel13)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfNomeServidor)
                            .addComponent(jcbNomeEntidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jtfEndereco)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jftfTelefone)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jftfCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jtfMunicipio, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jtfBairro, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jcbFuncaoCargo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jcbModalidade, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbUf, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfMatriculaServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtfNumeroEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jcbStatusContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbLicenca, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcbRestricao, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfNomeServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jtfMatriculaServidor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jcbNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtfEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jtfNumeroEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jtfBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jtfMunicipio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jcbUf, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jcbFuncaoCargo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jcbModalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jftfTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jftfCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jcbStatusContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jcbLicenca, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jcbRestricao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addContainerGap(78, Short.MAX_VALUE))
        );

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbNovo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/novo02.png"))); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbNovo.setEnabled(false);
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/OK.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbBuscar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete02.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/reload.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbAlterar.setEnabled(false);
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbImprimir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imprimir.png"))); // NOI18N
        jbImprimir.setText("Imprimir");
        jbImprimir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbImprimir.setEnabled(false);
        jbImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        cancelar();
}//GEN-LAST:event_jbNovoActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed

        if (!jtfNomeServidor.getText().isEmpty() && !jtfMatriculaServidor.getText().isEmpty() && !jtfEndereco.getText().isEmpty() && !jtfNumeroEndereco.getText().isEmpty()
                && jcbNomeEntidade.getSelectedIndex() != 0 && jcbFuncaoCargo.getSelectedIndex() != 0) {

            verificaCadastroServidor();

            if (opcao.equals("salvar")) {

                if (servidorVerificado != null) {
                    iniciaClasseGeral();
                    classeGeral.msgAtencao("Esse Servidor já esta cadastrado!");
                } else {
                    salvar();
                    opcao = "salvar";
                }

            } else if (opcao.equals("alterar")) {

                atualizar();
                opcao = "salvar";

            }

        } else {
            iniciaClasseGeral();
            classeGeral.msgAtencao("Complete os Campos Obrigatórios, destacados em Azul!");
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed

        if (jdbs == null) {
            jdbs = new jdBuscaServidor(null, true);
        }

        jdbs.setTipoCadastroUsuario(tipoCadastroUsuario);
        jdbs.setVisible(true);

        setServidorBuscado(jdbs.getServidor());
        jdbs.setServidor();
}//GEN-LAST:event_jbBuscarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        cancelar();
}//GEN-LAST:event_jbCancelarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        excluir();
}//GEN-LAST:event_jbExcluirActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed

        abilitaCampos();

        jbAlterar.setEnabled(false);

        opcao = "alterar";

        jbSalvar.setEnabled(true);
}//GEN-LAST:event_jbAlterarActionPerformed

    private void jbImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirActionPerformed

        //ADOGeral ag = new ADOGeral();
        Conexao conexao = new Conexao();
        HashMap parametros = new HashMap();
        try {
            //System.out.println(codigoRegistro);
            //parametros.put("titulo", "Titulo Relatorio");
            parametros.put("codigoServidor", new Integer(codigo));
            //parametros.put("codigo", lista.get(0).getNome();
            //ADOGeral.conectar();
            conexao.getConexao();
        } catch (ExcCadastro ex) {
            Logger.getLogger(jfCadastroCmei.class.getName()).log(Level.SEVERE, null, ex);
        }

        //        JRDataSource jrds = new JRBeanCollectionDataSource(lista);

        try {

            //jReport = JasperCompileManager.compileReport("E:/LUIZ/PROJETOS JAVA/CORPORATIVO/m2GestaoClinicas/FichaPaciente.jrxml");
            //jPrint = JasperFillManager.fillReport("C:/m2GestaoClinicas/FichaPaciente.jasper", parametros, ADOGeral.getConexao());
            jPrint = JasperFillManager.fillReport("Servidor.jasper", parametros, conexao.getConexao());
            //jPrint = JasperFillManager.fillReport(jReport, parametros, jrds);

            //if (!(jViewer == null)) {
            //jViewer = new JasperViewer(jPrint, false);
            //jViewer.setExtendedState(JFrame.MAXIMIZED_BOTH);
            if (jPrint != null) {
                jViewer.viewReport(jPrint, false);
                jPrint = null;
            }
            //}

        } catch (Exception ex) {
            ex.printStackTrace();
        }
}//GEN-LAST:event_jbImprimirActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jtfMatriculaServidorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfMatriculaServidorFocusLost
        
        if (!jtfMatriculaServidor.getText().isEmpty()) {
            iniciaClasseGeral();

            jtfMatriculaServidor.setText(classeGeral.somenteNumero(jtfMatriculaServidor.getText()));
        }

    }//GEN-LAST:event_jtfMatriculaServidorFocusLost

    private void jtfNumeroEnderecoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfNumeroEnderecoFocusLost
        jtfNumeroEndereco.setText(jtfNumeroEndereco.getText().toUpperCase());
    }//GEN-LAST:event_jtfNumeroEnderecoFocusLost

    private void jtfBairroFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfBairroFocusLost
        jtfBairro.setText(jtfBairro.getText().toUpperCase());
    }//GEN-LAST:event_jtfBairroFocusLost

    private void jtfMunicipioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfMunicipioFocusLost
        jtfMunicipio.setText(jtfMunicipio.getText().toUpperCase());
    }//GEN-LAST:event_jtfMunicipioFocusLost

    private void jcbFuncaoCargoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jcbFuncaoCargoFocusLost
        jcbStatusContrato.removeAllItems();
        
        jcbStatusContrato.addItem("CONCURSADO/CONTRATADO");
        
        if (jcbFuncaoCargo.getSelectedItem().toString().equals("ESTAGIARIO(A)")) {
            
            jcbStatusContrato.addItem("TRANSFERIDO");
            jcbStatusContrato.addItem("CONTRATO FINALIZADO");
            
        } else {
            
            jcbStatusContrato.addItem("TRANSFERIDO");
            jcbStatusContrato.addItem("DEMITIDO");
            jcbStatusContrato.addItem("APOSENTADO");
            jcbStatusContrato.addItem("CONTRATO FINALIZADO");
            
        }
        
    }//GEN-LAST:event_jcbFuncaoCargoFocusLost
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
    public void run() {
    new jfCadastroServidor().setVisible(true);
    }
    });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbImprimir;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JComboBox jcbFuncaoCargo;
    private javax.swing.JComboBox jcbLicenca;
    private javax.swing.JComboBox jcbModalidade;
    private javax.swing.JComboBox jcbNomeEntidade;
    private javax.swing.JComboBox jcbRestricao;
    private javax.swing.JComboBox jcbStatusContrato;
    private javax.swing.JComboBox jcbUf;
    private javax.swing.JFormattedTextField jftfCelular;
    private javax.swing.JFormattedTextField jftfTelefone;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JTextField jtfBairro;
    private javax.swing.JTextField jtfEndereco;
    private javax.swing.JTextField jtfMatriculaServidor;
    private javax.swing.JTextField jtfMunicipio;
    private javax.swing.JTextField jtfNomeServidor;
    private javax.swing.JTextField jtfNumeroEndereco;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {

        dao = null;
        this.dispose();
    }

    public void cancelar() {

        jtfBairro.setText("");
        jtfEndereco.setText("");
        jtfMatriculaServidor.setText("");
        jtfMunicipio.setText("CASCAVEL");
        jtfNomeServidor.setText("");
        jtfNumeroEndereco.setText("");
        jftfCelular.setText("");
        jftfTelefone.setText("");
        jcbFuncaoCargo.setSelectedIndex(0);
        jcbModalidade.setSelectedIndex(0);
        jcbLicenca.setSelectedIndex(0);
        jcbRestricao.setSelectedIndex(0);

        if (!tipoCadastroUsuario.equals("GERAL")) {
            jcbNomeEntidade.setSelectedItem(tipoCadastroUsuario);
        } else {
            jcbNomeEntidade.setSelectedIndex(0);
        }

        jcbUf.setSelectedIndex(16);
        jcbStatusContrato.setSelectedIndex(0);

        abilitaCampos();

        desabilitaBotoes();

        jtfMatriculaServidor.transferFocusBackward();

        opcao = "salvar";

        servidor = null;
        
    }

    public void abilitaCampos() {

        jtfNomeServidor.setEditable(true);
        jtfBairro.setEditable(true);
        jtfEndereco.setEditable(true);
        jtfMatriculaServidor.setEditable(true);
        jtfMunicipio.setEditable(true);
        jtfNumeroEndereco.setEditable(true);
        jcbFuncaoCargo.setEnabled(true);
        jcbModalidade.setEnabled(true);
        jcbLicenca.setEnabled(true);
        jcbRestricao.setEnabled(true);

        if (tipoCadastroUsuario.equals("GERAL")) {
            jcbNomeEntidade.setEnabled(true);
        }

        jcbUf.setEnabled(true);
        jftfCelular.setEditable(true);
        jftfTelefone.setEditable(true);
        jcbStatusContrato.setEnabled(true);

    }

    public void desabilitaCampos() {

        jtfNomeServidor.setEditable(false);
        jtfBairro.setEditable(false);
        jtfEndereco.setEditable(false);
        jtfMatriculaServidor.setEditable(false);
        jtfMunicipio.setEditable(false);
        jtfNumeroEndereco.setEditable(false);
        jcbFuncaoCargo.setEnabled(false);
        jcbModalidade.setEnabled(false);
        jcbLicenca.setEnabled(false);
        jcbRestricao.setEnabled(false);
        jcbNomeEntidade.setEnabled(false);
        jcbUf.setEnabled(false);
        jftfCelular.setEditable(false);
        jftfTelefone.setEditable(false);
        jcbStatusContrato.setEnabled(false);

    }

    public void abilitaBotoes() {

        jbNovo.setEnabled(true);
        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);

        if (cadastrarServidor == true) {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(true);
            jbAlterar.setEnabled(true);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }

    public void desabilitaBotoes() {

        jbNovo.setEnabled(false);
        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);

        if (cadastrarServidor == true) {
            jbSalvar.setEnabled(true);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }
    }

    public void preencheComboCmeis() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaCmeis = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaCmeis = dao.listarCmeis();

        for (int i = 0; i < listaCmeis.size(); i++) {
            jcbNomeEntidade.addItem(listaCmeis.get(i));
        }

        if (!tipoCadastroUsuario.equals("GERAL")) {
            jcbNomeEntidade.setSelectedItem(tipoCadastroUsuario);
            jcbNomeEntidade.setEnabled(false);
        }

    }

    public void preencheComboFuncaoCargo() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaFuncoesCargos = new ArrayList();

        jcbFuncaoCargo.removeAllItems();
        jcbFuncaoCargo.addItem("");

        listaFuncoesCargos = dao.listarFuncoesCargos();

        for (int i = 0; i < listaFuncoesCargos.size(); i++) {
            jcbFuncaoCargo.addItem(listaFuncoesCargos.get(i));
        }

    }
    
    public void preencheComboLicenca() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaLicencas = new ArrayList();

        jcbLicenca.removeAllItems();

        listaLicencas = dao.listarLicencasCadastradas("");

        for (int i = 0; i < listaLicencas.size(); i++) {
            
            iniciaLicenca();
            
            licenca = (Licenca) listaLicencas.get(i);
            jcbLicenca.addItem(licenca.getTipoLicenca());
            
            licenca = null;
        
        }

    }
    
    public void preencheComboRestricao() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaRestricao = new ArrayList();

        jcbRestricao.removeAllItems();

        listaRestricao = dao.listarRestricoesCadastradas("");

        for (int i = 0; i < listaRestricao.size(); i++) {
            
            iniciaRestricao();
            
            restricao = (Restricao) listaRestricao.get(i);
            jcbRestricao.addItem(restricao.getTipoRestricao());
            
            restricao = null;
        }

    }

//Geradores, Validadores===========================================================================================================================================
    public void iniciaClasseGeral() {
        
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
    
    public void iniciaDao() {

        if (dao == null) {
            dao = new DAO();
        }

    }
    
    public void iniciaControleCaracteresEspeciais() {
        
        if (controleCaracteresEspeciais == null) {
            controleCaracteresEspeciais = new ControleCaracteresEspeciais();
        }
        
    }
    
    public void iniciaControleLicenca() {
        
        if (controleLicenca == null) {
            controleLicenca = new ControleLicenca();
        }
        
    }
    
    public void iniciaControleRestricao() {
        
        if (controleRestricao == null) {
            controleRestricao = new ControleRestricao();
        }
        
    }
    
    public void iniciaLicenca() {
        
        if (licenca == null) {
            licenca = new Licenca();
        }
        
    }
    
    public void iniciaRestricao() {
        
        if (restricao == null) {
            restricao = new Restricao();
        }
        
    }
    
    public void iniciaServidor() {
        
        if (servidor == null) {
            servidor = new Servidor();
        }
        
    }
    
    public void verificaCadastroServidor() {

        iniciaDao();
        //DAO dao = new DAO();
        String nomeServ;
        String matric;

        nomeServ = jtfNomeServidor.getText();
        matric = jtfMatriculaServidor.getText();
        servidorVerificado = null;

        servidorVerificado = (Servidor) dao.verificarCadastroServidor(nomeServ, matric);

    }

//Getters and Setters===========================================================================================================================================
    public void setNumeroCaracteres() {

        jtfNomeServidor.setDocument(new FixedLengthDocument(240));
        jtfMatriculaServidor.setDocument(new FixedLengthDocument(10));
        jtfEndereco.setDocument(new FixedLengthDocument(120));
        jtfNumeroEndereco.setDocument(new FixedLengthDocument(10));
        jtfBairro.setDocument(new FixedLengthDocument(120));
        jtfMunicipio.setDocument(new FixedLengthDocument(120));

    }

    public void setServidorBuscado(Servidor servidorBuscado) {

        System.out.println(servidorBuscado.getNomeServidor());
        if (servidorBuscado.getNomeServidor().isEmpty()) {
            System.out.println("Nenhum Resultado!");
        } else {

            iniciaControleCaracteresEspeciais();
            iniciaControleLicenca();
            iniciaControleRestricao();
            iniciaServidor();

            jtfBairro.setText(controleCaracteresEspeciais.getCaracterEspecial(servidorBuscado.getBairro()));
            jtfEndereco.setText(controleCaracteresEspeciais.getCaracterEspecial(servidorBuscado.getEndereco()));
            jtfMatriculaServidor.setText(servidorBuscado.getMatricula());
            jtfMunicipio.setText(controleCaracteresEspeciais.getCaracterEspecial(servidorBuscado.getMunicipio()));
            jtfNomeServidor.setText(controleCaracteresEspeciais.getCaracterEspecial(servidorBuscado.getNomeServidor()));
            jtfNumeroEndereco.setText(servidorBuscado.getNumeroEndereco());
            jftfCelular.setText(servidorBuscado.getCelular());
            jftfTelefone.setText(servidorBuscado.getTelefone());
            jcbFuncaoCargo.setSelectedItem(servidorBuscado.getFuncaoCargo());
            jcbLicenca.setSelectedItem(controleLicenca.getTipoLicenca(servidorBuscado.getLicenca_codigoLicenca()));
            jcbModalidade.setSelectedItem(servidorBuscado.getModalidade());
            jcbNomeEntidade.setSelectedItem(controleCaracteresEspeciais.getCaracterEspecial(servidorBuscado.getNomeEntidade()));
            jcbRestricao.setSelectedItem(controleRestricao.getTipoRestricao(servidorBuscado.getRestricao_codigoRestricao()));
            jcbUf.setSelectedItem(servidorBuscado.getUf());
            jcbStatusContrato.setSelectedItem(servidorBuscado.getStatusContrato());

            codigo = servidorBuscado.getCodigoServidor();
            servidor.setCodigoServidor(codigo);

            desabilitaCampos();

            abilitaBotoes();

        }

    }

    public String getNomeUsuario() {
        return nomeUsuario;
    }

    public void setNomeUsuario(String nomeUsuario) {
        this.nomeUsuario = nomeUsuario;
        jtfMunicipio.setText("CASCAVEL");

        preencheComboCmeis();
        preencheComboFuncaoCargo();
        preencheComboLicenca();
        preencheComboRestricao();

        getPermissoes();
        desabilitaBotoes();
    }

    public String getTipoCadastroUsuario() {
        return tipoCadastroUsuario;
    }

    public void setTipoCadastroUsuario(String tipoCadastroUsuario) {
        this.tipoCadastroUsuario = tipoCadastroUsuario;
    }

    public void getPermissoes() {
        Permissoes permissoes;
        iniciaDao();
        //DAO dao = new DAO();

        permissoes = (Permissoes) dao.buscaPermissoes(getNomeUsuario());

        cadastrarServidor = permissoes.isCadastrarUsuario();
    }

//Metodos DAO===========================================================================================================================================
    public void salvar() {



        if (!jtfNomeServidor.getText().isEmpty() && !jtfMatriculaServidor.getText().isEmpty() && jcbNomeEntidade.getSelectedIndex() != 0 && !jtfEndereco.getText().isEmpty()
                && !jtfNumeroEndereco.getText().isEmpty() && jcbFuncaoCargo.getSelectedIndex() != 0) {

            iniciaDao();
            iniciaControleCaracteresEspeciais();
            iniciaControleLicenca();
            iniciaControleRestricao();
            iniciaServidor();

            servidor.setBairro(controleCaracteresEspeciais.getCodigoCaracterEpecial(jtfBairro.getText()));
            servidor.setCelular(jftfCelular.getText());
            servidor.setEndereco(controleCaracteresEspeciais.getCodigoCaracterEpecial(jtfEndereco.getText()));
            servidor.setFuncaoCargo(jcbFuncaoCargo.getSelectedItem().toString());
            servidor.setLicenca_codigoLicenca(controleLicenca.getCodigoLicenca(jcbLicenca.getSelectedItem().toString()));
            servidor.setMatricula(jtfMatriculaServidor.getText());
            servidor.setModalidade(jcbModalidade.getSelectedItem().toString());
            servidor.setMunicipio(controleCaracteresEspeciais.getCodigoCaracterEpecial(jtfMunicipio.getText()));
            servidor.setRestricao_codigoRestricao(controleRestricao.getCodigoRestricao(jcbRestricao.getSelectedItem().toString()));
            servidor.setTipoEntidade("CMEI");
            servidor.setNomeEntidade(controleCaracteresEspeciais.getCodigoCaracterEpecial(jcbNomeEntidade.getSelectedItem().toString()));
            servidor.setNomeServidor(controleCaracteresEspeciais.getCodigoCaracterEpecial(jtfNomeServidor.getText()));
            servidor.setNumeroEndereco(jtfNumeroEndereco.getText());
            servidor.setTelefone(jftfTelefone.getText());
            servidor.setUf(jcbUf.getSelectedItem().toString());
            servidor.setStatusContrato(jcbStatusContrato.getSelectedItem().toString());

            dao.inserir(servidor, 7);
            cancelar();

        } else {
            iniciaClasseGeral();
            classeGeral.msgAtencao("Complete os Campos Obrigatórios, destacados em Azul!");
        }

    }

    public void atualizar() {

        if (!jtfNomeServidor.getText().isEmpty() && !jtfMatriculaServidor.getText().isEmpty() && jcbNomeEntidade.getSelectedIndex() != 0 && !jtfEndereco.getText().isEmpty()
                && !jtfNumeroEndereco.getText().isEmpty() && jcbFuncaoCargo.getSelectedIndex() != 0) {

            iniciaDao();
            iniciaControleCaracteresEspeciais();
            iniciaControleLicenca();
            iniciaControleRestricao();
            iniciaServidor();

            servidor.setBairro(controleCaracteresEspeciais.getCodigoCaracterEpecial(jtfBairro.getText()));
            servidor.setCelular(jftfCelular.getText());
            servidor.setEndereco(controleCaracteresEspeciais.getCodigoCaracterEpecial(jtfEndereco.getText()));
            servidor.setFuncaoCargo(jcbFuncaoCargo.getSelectedItem().toString());
            servidor.setLicenca_codigoLicenca(controleLicenca.getCodigoLicenca(jcbLicenca.getSelectedItem().toString()));
            servidor.setMatricula(jtfMatriculaServidor.getText());
            servidor.setModalidade(jcbModalidade.getSelectedItem().toString());
            servidor.setMunicipio(controleCaracteresEspeciais.getCodigoCaracterEpecial(jtfMunicipio.getText()));
            servidor.setRestricao_codigoRestricao(controleRestricao.getCodigoRestricao(jcbRestricao.getSelectedItem().toString()));
            servidor.setTipoEntidade("CMEI");
            servidor.setNomeEntidade(controleCaracteresEspeciais.getCodigoCaracterEpecial(jcbNomeEntidade.getSelectedItem().toString()));
            servidor.setNomeServidor(controleCaracteresEspeciais.getCodigoCaracterEpecial(jtfNomeServidor.getText()));
            servidor.setNumeroEndereco(jtfNumeroEndereco.getText());
            servidor.setTelefone(jftfTelefone.getText());
            servidor.setUf(jcbUf.getSelectedItem().toString());
            servidor.setStatusContrato(jcbStatusContrato.getSelectedItem().toString());

            dao.atualizar(servidor, 7);
            cancelar();

        } else {
            iniciaClasseGeral();
            classeGeral.msgAtencao("Complete os Campos Obrigatórios, destacados em Azul!");
        }

    }

    public void excluir() {

        iniciaClasseGeral();

        if (classeGeral.msgConfirma("Deseja excluir o Servidor ?")) {

            iniciaDao();
            //DAO dao = new DAO();
            dao.excluir(servidor, 7);
            cancelar();

        }
    }
}
