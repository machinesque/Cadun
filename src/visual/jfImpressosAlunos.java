/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jfImpressosCmei.java
 *
 * Created on 16/08/2010, 06:38:24
 */

package visual;

import conexao.Conexao;
import controlador.ControleImagem;
import controlador.ControleVersao;
import dao.DAO;
import excecoes.ExcCadastro;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelo.Permissoes;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author luizam
 */
public class jfImpressosAlunos extends javax.swing.JFrame {

    private static ControleVersao versao = new ControleVersao();
    private ControleImagem controleImagem = new ControleImagem();

    private JasperPrint jPrint;
    private JasperViewer jViewer;

    private String nomeUsuario;
    private String tipoCadastroAluno;
    private boolean imprimirAluno;

    /** Creates new form jfImpressosCmei */
    public jfImpressosAlunos() {
        super("Impressos Alunos - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage(controleImagem.getIconeImagem());
        this.setIconImage(img);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

        preencheComboCmeis();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgImpressosAluno = new javax.swing.ButtonGroup();
        btgStatusAluno = new javax.swing.ButtonGroup();
        btgOrdenarPor = new javax.swing.ButtonGroup();
        jpImpressaoCmei = new javax.swing.JPanel();
        jrbPorUnidade = new javax.swing.JRadioButton();
        jcbNomeEntidade = new javax.swing.JComboBox();
        jrbMatriculados = new javax.swing.JRadioButton();
        jrbFilaEspera = new javax.swing.JRadioButton();
        jrbAmbos = new javax.swing.JRadioButton();
        jrbAlunosFilaEspera = new javax.swing.JRadioButton();
        jrbDataCadastro = new javax.swing.JRadioButton();
        jrbDataNascimento = new javax.swing.JRadioButton();
        jcbOrdenarPor = new javax.swing.JCheckBox();
        jpBotoes = new javax.swing.JPanel();
        jbImprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpImpressaoCmei.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        btgImpressosAluno.add(jrbPorUnidade);
        jrbPorUnidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbPorUnidade.setSelected(true);
        jrbPorUnidade.setText("Por Unidade");
        jrbPorUnidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbPorUnidadeActionPerformed(evt);
            }
        });

        jcbNomeEntidade.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbNomeEntidade.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btgStatusAluno.add(jrbMatriculados);
        jrbMatriculados.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbMatriculados.setText("Matriculados");
        jrbMatriculados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbMatriculadosActionPerformed(evt);
            }
        });

        btgStatusAluno.add(jrbFilaEspera);
        jrbFilaEspera.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbFilaEspera.setText("Fila de Espera");
        jrbFilaEspera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbFilaEsperaActionPerformed(evt);
            }
        });

        btgStatusAluno.add(jrbAmbos);
        jrbAmbos.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbAmbos.setSelected(true);
        jrbAmbos.setText("Ambos");
        jrbAmbos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAmbosActionPerformed(evt);
            }
        });

        btgImpressosAluno.add(jrbAlunosFilaEspera);
        jrbAlunosFilaEspera.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbAlunosFilaEspera.setText("Fila de Espera Geral");
        jrbAlunosFilaEspera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbAlunosFilaEsperaActionPerformed(evt);
            }
        });

        btgOrdenarPor.add(jrbDataCadastro);
        jrbDataCadastro.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbDataCadastro.setSelected(true);
        jrbDataCadastro.setText("Data de Cadastro");
        jrbDataCadastro.setEnabled(false);

        btgOrdenarPor.add(jrbDataNascimento);
        jrbDataNascimento.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jrbDataNascimento.setText("Data de Nascimento");
        jrbDataNascimento.setEnabled(false);

        jcbOrdenarPor.setText("Ordenar Por:");
        jcbOrdenarPor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbOrdenarPorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpImpressaoCmeiLayout = new javax.swing.GroupLayout(jpImpressaoCmei);
        jpImpressaoCmei.setLayout(jpImpressaoCmeiLayout);
        jpImpressaoCmeiLayout.setHorizontalGroup(
            jpImpressaoCmeiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpImpressaoCmeiLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jpImpressaoCmeiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbOrdenarPor)
                    .addComponent(jrbPorUnidade)
                    .addComponent(jrbAlunosFilaEspera)
                    .addGroup(jpImpressaoCmeiLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jpImpressaoCmeiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrbDataCadastro)
                            .addComponent(jrbMatriculados)
                            .addComponent(jrbFilaEspera)
                            .addComponent(jrbAmbos)
                            .addComponent(jcbNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jrbDataNascimento))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpImpressaoCmeiLayout.setVerticalGroup(
            jpImpressaoCmeiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpImpressaoCmeiLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jrbAlunosFilaEspera)
                .addGap(18, 18, 18)
                .addComponent(jrbPorUnidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbNomeEntidade, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbMatriculados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbFilaEspera)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbAmbos)
                .addGap(18, 18, 18)
                .addComponent(jcbOrdenarPor)
                .addGap(3, 3, 3)
                .addComponent(jrbDataCadastro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jrbDataNascimento)
                .addContainerGap(57, Short.MAX_VALUE))
        );

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbImprimir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/imprimir.png"))); // NOI18N
        jbImprimir.setText("Imprimir");
        jbImprimir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(594, Short.MAX_VALUE)
                .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jbImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpImpressaoCmei, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpImpressaoCmei, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbImprimirActionPerformed

        //ADOGeral ag = new ADOGeral();
        Conexao conexao = new Conexao();
        HashMap parametros = new HashMap();
        try {
            //System.out.println(codigoRegistro);
            //parametros.put("titulo", "Titulo Relatorio");
            parametros.put("nomeEntidade", jcbNomeEntidade.getSelectedItem());
            parametros.put("tipoCadastro", tipoCadastroAluno);
            //parametros.put("mesTermino", jDateChooserTermino.getDate());
            //parametros.put("codigo", lista.get(0).getNome();
            //ADOGeral.conectar();
            conexao.getConexao();
        } catch (ExcCadastro ex) {
            Logger.getLogger(jfImpressosAlunos.class.getName()).log(Level.SEVERE, null, ex);
        }

        //        JRDataSource jrds = new JRBeanCollectionDataSource(lista);

        try {

            //jReport = JasperCompileManager.compileReport("E:/LUIZ/PROJETOS JAVA/CORPORATIVO/m2GestaoClinicas/FichaPaciente.jrxml");
            //jPrint = JasperFillManager.fillReport("C:/m2GestaoClinicas/FichaPaciente.jasper", parametros, ADOGeral.getConexao());
            if (jrbPorUnidade.isSelected()) {

                if (jcbNomeEntidade.getSelectedIndex() == 0) {
                    JOptionPane.showMessageDialog(null, "Não há nenhuma Entidade selecinada no campo especifico!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
                } else {

                    if (jrbAmbos.isSelected()) {
                        
                        if (jcbOrdenarPor.isSelected()) {
                            if (jrbDataNascimento.isSelected()) {
                                jPrint = JasperFillManager.fillReport("AlunoPorUnidadeSemTipoCadastroReduzidaOrdenadoDataNascimento.jasper", parametros, conexao.getConexao());
                            } else {
                                jPrint = JasperFillManager.fillReport("AlunoPorUnidadeSemTipoCadastroReduzida.jasper", parametros, conexao.getConexao());
                            }
                        } else {
                            jPrint = JasperFillManager.fillReport("AlunoPorUnidadeSemTipoCadastroReduzida.jasper", parametros, conexao.getConexao());
                        }
                        
                    } else {
                        
                        if (jcbOrdenarPor.isSelected()) {
                            if (jrbDataNascimento.isSelected()) {
                                jPrint = JasperFillManager.fillReport("AlunoPorUnidadeComTipoCadastroReduzidaOrdenadoDataNascimento.jasper", parametros, conexao.getConexao());
                            } else {
                                jPrint = JasperFillManager.fillReport("AlunoPorUnidadeComTipoCadastroReduzida.jasper", parametros, conexao.getConexao());
                            }
                        } else {
                            jPrint = JasperFillManager.fillReport("AlunoPorUnidadeComTipoCadastroReduzida.jasper", parametros, conexao.getConexao());
                        }
                        
                    }

                }

            } else if (jrbAlunosFilaEspera.isSelected()) {
                
                if (jcbOrdenarPor.isSelected()) {
                    if (jrbDataNascimento.isSelected()) {
                        jPrint = JasperFillManager.fillReport("AlunoPorFilaEsperaReduzidaOrdenadoDataNascimento.jasper", parametros, conexao.getConexao());
                    } else {
                        jPrint = JasperFillManager.fillReport("AlunoPorFilaEsperaReduzida.jasper", parametros, conexao.getConexao());
                    }
                } else {
                    jPrint = JasperFillManager.fillReport("AlunoPorFilaEsperaReduzida.jasper", parametros, conexao.getConexao());
                }
                
            }

            //jPrint = JasperFillManager.fillReport(jReport, parametros, jrds);

            //if (!(jViewer == null)) {
            //jViewer = new JasperViewer(jPrint, false);
            //jViewer.setExtendedState(JFrame.MAXIMIZED_BOTH);
            if (jPrint != null) {
                jViewer.viewReport(jPrint, false);
                jPrint = null;
            }
            //}

        } catch (Exception ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_jbImprimirActionPerformed

    private void jrbPorUnidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbPorUnidadeActionPerformed

        if (jrbPorUnidade.isSelected()) {

            jcbNomeEntidade.setEnabled(true);
            jrbAmbos.setEnabled(true);
            jrbAmbos.setSelected(true);
            jrbMatriculados.setEnabled(true);
            jrbFilaEspera.setEnabled(true);

            preencheComboCmeis();
            tipoCadastroAluno = "";

            if (!jcbOrdenarPor.isSelected()) {
                jrbDataCadastro.setEnabled(false);
                jrbDataNascimento.setEnabled(false);
            }
            
        }

    }//GEN-LAST:event_jrbPorUnidadeActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jrbAmbosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAmbosActionPerformed

        if (jrbAmbos.isSelected()) {
            tipoCadastroAluno = "";
        }

    }//GEN-LAST:event_jrbAmbosActionPerformed

    private void jrbMatriculadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbMatriculadosActionPerformed

        if (jrbMatriculados.isSelected()) {
            tipoCadastroAluno = "%TR%";
        }

    }//GEN-LAST:event_jrbMatriculadosActionPerformed

    private void jrbFilaEsperaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbFilaEsperaActionPerformed

        if (jrbFilaEspera.isSelected()) {
            tipoCadastroAluno = "%FILA%";
        }

    }//GEN-LAST:event_jrbFilaEsperaActionPerformed

    private void jrbAlunosFilaEsperaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbAlunosFilaEsperaActionPerformed

        if (jrbAlunosFilaEspera.isSelected()) {
            
            jcbNomeEntidade.setEnabled(false);
            jrbAmbos.setEnabled(false);
            jrbMatriculados.setEnabled(false);
            jrbFilaEspera.setEnabled(false);

            if (!jcbOrdenarPor.isSelected()) {
                jrbDataCadastro.setEnabled(false);
                jrbDataNascimento.setEnabled(false);
            }
            
            tipoCadastroAluno = "FILA";

        }
        
    }//GEN-LAST:event_jrbAlunosFilaEsperaActionPerformed

    private void jcbOrdenarPorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbOrdenarPorActionPerformed
        if (jcbOrdenarPor.isSelected()) {
            jrbDataCadastro.setEnabled(true);
            jrbDataNascimento.setEnabled(true);
        } else {
            jrbDataCadastro.setEnabled(false);
            jrbDataNascimento.setEnabled(false);
        }
    }//GEN-LAST:event_jcbOrdenarPorActionPerformed

    /**
    * @param args the command line arguments
    */
    /*public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jfImpressosCmei().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgImpressosAluno;
    private javax.swing.ButtonGroup btgOrdenarPor;
    private javax.swing.ButtonGroup btgStatusAluno;
    private javax.swing.JButton jbImprimir;
    private javax.swing.JComboBox jcbNomeEntidade;
    private javax.swing.JCheckBox jcbOrdenarPor;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPanel jpImpressaoCmei;
    private javax.swing.JRadioButton jrbAlunosFilaEspera;
    private javax.swing.JRadioButton jrbAmbos;
    private javax.swing.JRadioButton jrbDataCadastro;
    private javax.swing.JRadioButton jrbDataNascimento;
    private javax.swing.JRadioButton jrbFilaEspera;
    private javax.swing.JRadioButton jrbMatriculados;
    private javax.swing.JRadioButton jrbPorUnidade;
    // End of variables declaration//GEN-END:variables

//Outros Metodos ===========================================================================================================================================
    public void fechar() {
        
        this.dispose();
    }

    public void cancelar() {
        
        jrbPorUnidade.setSelected(true);
        
        jcbNomeEntidade.setEnabled(true);
        jrbAmbos.setEnabled(true);
        jrbAmbos.setSelected(true);
        jrbMatriculados.setEnabled(true);
        jrbFilaEspera.setEnabled(true);

        preencheComboCmeis();
        tipoCadastroAluno = "";
        
        jcbOrdenarPor.setSelected(false);
        jrbDataCadastro.setSelected(true);
        jrbDataCadastro.setEnabled(false);
        jrbDataNascimento.setEnabled(false);
        
    }
    
    public void preencheComboCmeis() {

        DAO dao = new DAO();
        List listaCmeis = new ArrayList();

        jcbNomeEntidade.removeAllItems();
        jcbNomeEntidade.addItem("");

        listaCmeis = dao.listarCmeis();

        for (int i = 0; i < listaCmeis.size(); i++) {
            jcbNomeEntidade.addItem(listaCmeis.get(i));
        }

    }
    
//Geradores, Validadores===========================================================================================================================================
    public void abilitaBotoes() {

        if (imprimirAluno == true) {
            jbImprimir.setEnabled(true);
        } else {
            jbImprimir.setEnabled(false);
        }

    }

    public void desabilitaBotoes() {

        if (imprimirAluno == true) {
            jbImprimir.setEnabled(true);
        } else {
            jbImprimir.setEnabled(false);
        }

    }

//Getters and Setters===========================================================================================================================================
    public String getNomeUsuario() {
        return nomeUsuario;
    }

    public void setNomeUsuario(String nomeUsuario) {
        this.nomeUsuario = nomeUsuario;
        getPermissoes();
        desabilitaBotoes();
    }

    public void getPermissoes() {
        Permissoes permissoes;
        DAO dao = new DAO();

        permissoes = (Permissoes) dao.buscaPermissoes(getNomeUsuario());

        imprimirAluno = permissoes.isImprimirAluno();
    }

//Metodos DAO===========================================================================================================================================

}
