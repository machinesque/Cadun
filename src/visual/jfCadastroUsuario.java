/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jfCadastroUsuario.java
 *
 * Created on 09/08/2010, 14:03:06
 */
package visual;

import controlador.ClasseGeral;
import controlador.ControleCaracteresEspeciais;
import controlador.ControleImagem;
import controlador.ControleVersao;
import controlador.EncriptaSenha;
import controlador.FixedLengthDocument;
import dao.DAO;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.List;
import modelo.Permissoes;
import modelo.Usuario;

/**
 *
 * @author luiz
 */
public class jfCadastroUsuario extends javax.swing.JFrame {

    private static ControleVersao versao = new ControleVersao();
    private ClasseGeral classeGeral;
    private ControleCaracteresEspeciais controleCaracteresEspeciais;
    private ControleImagem controleImagem = new ControleImagem();
    private DAO dao;
    private EncriptaSenha criptaSenha;
    private Usuario usuario;
    private Usuario usuarioVerificado;
    
    private jdBuscaUsuario jdbu;
    private jfPermissoes jfPermiss;

    public int codigo = 0;
    private String nomeUsuario;
    private String opcao = "salvar";
    private String senha;
    private String contraSenha;
    private String tipoCadastroUsuario;
    private String servidorVerificado;
    private boolean cadastrarUsuario;

    /** Creates new form jfCadastroUsuario */
    public jfCadastroUsuario() {
        super("Cadastro Usuários - " + versao.getVersao() + " - " + versao.getAno());
        initComponents();

        //Altera icone na barra de titulo
        Toolkit kit = Toolkit.getDefaultToolkit();
        Image img = kit.getImage(controleImagem.getIconeImagem());
        this.setIconImage(img);

        //centraliza tela
        setSize(getWidth(), getHeight());
        setLocationRelativeTo(null);

        setNumeroCaracteres();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpBotoes = new javax.swing.JPanel();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbPermissoes = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfNomeUsuario = new javax.swing.JTextField();
        jtfMatriculaUsuario = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jcbTemaEscolhido = new javax.swing.JComboBox();
        jpswdfSenha = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jcbTipoCadastro = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jpswdfConfirmaSenha = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpBotoes.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jbNovo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/novo02.png"))); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbNovo.setEnabled(false);
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/OK.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbBuscar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/delete02.png"))); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbAlterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/reload.png"))); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbAlterar.setEnabled(false);
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbPermissoes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbPermissoes.setText("Permissões");
        jbPermissoes.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jbPermissoes.setEnabled(false);
        jbPermissoes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPermissoesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesLayout = new javax.swing.GroupLayout(jpBotoes);
        jpBotoes.setLayout(jpBotoesLayout);
        jpBotoesLayout.setHorizontalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpBotoesLayout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbPermissoes, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpBotoesLayout.setVerticalGroup(
            jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPermissoes, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel1.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Nome: ");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Matricula: ");

        jtfNomeUsuario.setBackground(new java.awt.Color(205, 204, 255));
        jtfNomeUsuario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfNomeUsuario.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfNomeUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfNomeUsuarioFocusLost(evt);
            }
        });

        jtfMatriculaUsuario.setBackground(new java.awt.Color(204, 204, 255));
        jtfMatriculaUsuario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfMatriculaUsuario.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        jtfMatriculaUsuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfMatriculaUsuarioFocusLost(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Senha: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Tema: ");

        jcbTemaEscolhido.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbTemaEscolhido.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PADRÃO", "LIQUIDO", "WINDOWS" }));
        jcbTemaEscolhido.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jpswdfSenha.setBackground(new java.awt.Color(204, 204, 255));
        jpswdfSenha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jpswdfSenha.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Tipo de Cadastro: ");

        jcbTipoCadastro.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbTipoCadastro.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Confirma Senha: ");

        jpswdfConfirmaSenha.setBackground(new java.awt.Color(204, 204, 255));
        jpswdfConfirmaSenha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jpswdfConfirmaSenha.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jcbTipoCadastro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpswdfSenha)
                    .addComponent(jcbTemaEscolhido, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfMatriculaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNomeUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                    .addComponent(jpswdfConfirmaSenha))
                .addGap(276, 276, 276))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jtfNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfMatriculaUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcbTemaEscolhido, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jcbTipoCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jpswdfSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jpswdfConfirmaSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 805, Short.MAX_VALUE)
            .addComponent(jpBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        cancelar();
}//GEN-LAST:event_jbNovoActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed

        verificaNomeUsuario();

        if (opcao.equals("salvar")) {

            //if (verificaNomeServidor()) {

                if (usuarioVerificado != null) {
                    iniciaClasseGeral();
                    classeGeral.msgAtencao("Esse Usuário já existe!");
                } else {
                    if (jpswdfConfirmaSenha.getText().equals(jpswdfSenha.getText())) {
                        salvar();
                        opcao = "salvar";
                    } else {
                        iniciaClasseGeral();
                        classeGeral.msgAtencao("Senha não confere, digite-a novamente!");
                        jpswdfConfirmaSenha.setText("");
                        jpswdfSenha.setText("");
                    }
                }

            /*} else {
                JOptionPane.showMessageDialog(null, "Esse Usuário não está cadastrado como Servidor, \n Cadastre-o antes!", "Atenção", JOptionPane.WARNING_MESSAGE, null);
            }*/

        } else if (opcao.equals("alterar")) {
            iniciaEncriptaSenha();
            
            String senhaAux;
            
            if (jpswdfSenha.getText().equals(senha)) {
                senhaAux = jpswdfSenha.getText();
            } else {
                senhaAux = criptaSenha.ResumirTexto(jpswdfSenha.getText());
            }
            
            if (criptaSenha.ResumirTexto(jpswdfConfirmaSenha.getText()).equals(senhaAux)) {
                atualizar();
                opcao = "salvar";
            } else {
                iniciaClasseGeral();
                classeGeral.msgAtencao("Senha não confere, digite-a novamente!");
                jpswdfConfirmaSenha.setText("");
                jpswdfSenha.setText("");
            }
            
        }

    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed

        if (jdbu == null) {
            jdbu = new jdBuscaUsuario(null, true);
        }

        jdbu.setTipoCadastroUsuario(tipoCadastroUsuario);
        jdbu.setVisible(true);

        setUsuarioBuscado(jdbu.getUsuario());
        jdbu.setUsuario();
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        cancelar();
}//GEN-LAST:event_jbCancelarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        excluir();
}//GEN-LAST:event_jbExcluirActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed

        abilitaCampos();

        jbAlterar.setEnabled(false);

        opcao = "alterar";

        jbSalvar.setEnabled(true);

    }//GEN-LAST:event_jbAlterarActionPerformed

    private void jtfMatriculaUsuarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfMatriculaUsuarioFocusLost
        
        if (!jtfMatriculaUsuario.getText().isEmpty()) {
            iniciaClasseGeral();

            jtfMatriculaUsuario.setText(classeGeral.somenteNumero(jtfMatriculaUsuario.getText()));
        }

    }//GEN-LAST:event_jtfMatriculaUsuarioFocusLost

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        fechar();
    }//GEN-LAST:event_formWindowClosing

    private void jbPermissoesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPermissoesActionPerformed
        if (jtfNomeUsuario.getText().isEmpty()) {
            iniciaClasseGeral();
            classeGeral.msgAtencao("Escolha um Usuario para dar Permissões!");
        } else {
            if (jfPermiss == null) {
                jfPermiss = new jfPermissoes();
            }

            jfPermiss.setTipoCadastroUsuario(tipoCadastroUsuario);
            jfPermiss.setNomeUsuario(jtfNomeUsuario.getText());
            jfPermiss.setVisible(true);
        }
    }//GEN-LAST:event_jbPermissoesActionPerformed

    private void jtfNomeUsuarioFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfNomeUsuarioFocusLost
        if (!jtfNomeUsuario.getText().isEmpty()) {
            jtfNomeUsuario.setText(jtfNomeUsuario.getText().toUpperCase());
        }
    }//GEN-LAST:event_jtfNomeUsuarioFocusLost
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
    public void run() {
    new jfCadastroUsuario().setVisible(true);
    }
    });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbPermissoes;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JComboBox jcbTemaEscolhido;
    private javax.swing.JComboBox jcbTipoCadastro;
    private javax.swing.JPanel jpBotoes;
    private javax.swing.JPasswordField jpswdfConfirmaSenha;
    private javax.swing.JPasswordField jpswdfSenha;
    private javax.swing.JTextField jtfMatriculaUsuario;
    private javax.swing.JTextField jtfNomeUsuario;
    // End of variables declaration//GEN-END:variables

//Outros Metodos===================================================================================================================================
    public void fechar() {

        if (!jtfNomeUsuario.getText().isEmpty() || !jtfMatriculaUsuario.getText().isEmpty()) {

            iniciaClasseGeral();
            classeGeral.msgAtencao("Cancele ou Salve o Cadastro em Edição!");

        } else {

            dao = null;
            this.dispose();

        }
    }

    public void cancelar() {

        if (jfPermiss != null) {
            jfPermiss.dispose();
            jfPermiss = null;
        }
        
        jtfNomeUsuario.setText("");
        jtfMatriculaUsuario.setText("");
        jcbTemaEscolhido.setSelectedIndex(0);
        jpswdfSenha.setText("");
        jpswdfConfirmaSenha.setText("");

        if (!tipoCadastroUsuario.equals("GERAL")) {
            jcbTipoCadastro.setSelectedItem(tipoCadastroUsuario);
        } else {
            jcbTipoCadastro.setSelectedIndex(0);
        }

        abilitaCampos();

        desabilitaBotoes();

        jtfMatriculaUsuario.transferFocusBackward();

        opcao = "salvar";

        usuario = null;
        usuarioVerificado = null;
        
    }

    public void abilitaCampos() {

        jtfNomeUsuario.setEditable(true);
        jtfMatriculaUsuario.setEditable(true);
        jcbTemaEscolhido.setEnabled(true);
        jpswdfSenha.setEditable(true);
        jpswdfConfirmaSenha.setEditable(true);

        if (tipoCadastroUsuario.equals("GERAL")) {
            jcbTipoCadastro.setEnabled(true);
        }

        abilitaPermissoes();

    }

    public void desabilitaCampos() {

        jtfNomeUsuario.setEditable(false);
        jtfMatriculaUsuario.setEditable(false);
        jcbTemaEscolhido.setEnabled(false);
        jcbTipoCadastro.setEnabled(false);
        jpswdfSenha.setEditable(false);
        jpswdfConfirmaSenha.setEditable(false);

    }

    public void abilitaPermissoes() {

        if (cadastrarUsuario == true) {
            jbPermissoes.setEnabled(true);
            jtfMatriculaUsuario.setEditable(true);
        } else {
            jbPermissoes.setEnabled(false);
            jtfMatriculaUsuario.setEditable(false);
        }

    }

    public void abilitaBotoes() {

        jbNovo.setEnabled(true);
        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);

        if (cadastrarUsuario == true) {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(true);
            jbAlterar.setEnabled(true);
        } else if (nomeUsuario.equals(jtfNomeUsuario.getText())) {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(true);
            jbAlterar.setEnabled(true);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }

    public void desabilitaBotoes() {

        jbNovo.setEnabled(false);
        jbCancelar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbPermissoes.setEnabled(false);

        if (cadastrarUsuario == true) {
            jbSalvar.setEnabled(true);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        } else {
            jbSalvar.setEnabled(false);
            jbExcluir.setEnabled(false);
            jbAlterar.setEnabled(false);
        }

    }

    public void preencheComboTipoCadastro() {

        iniciaDao();
        //DAO dao = new DAO();
        List listaCmeis = new ArrayList();

        jcbTipoCadastro.removeAllItems();
        jcbTipoCadastro.addItem("GERAL");

        listaCmeis = dao.listarCmeis();

        for (int i = 0; i < listaCmeis.size(); i++) {
            jcbTipoCadastro.addItem(listaCmeis.get(i));
        }

        if (!tipoCadastroUsuario.equals("GERAL")) {
            jcbTipoCadastro.setSelectedItem(tipoCadastroUsuario);
            jcbTipoCadastro.setEnabled(false);
        }

    }

//Geradores, Validadores, Verificadores===================================================================================================================================
    public void iniciaClasseGeral() {
        
        if (classeGeral == null) {
            classeGeral = new ClasseGeral();
        }
        
    }
    
    public void iniciaControleCaracteresEspeciais() {
        
        if (controleCaracteresEspeciais == null) {
            controleCaracteresEspeciais = new ControleCaracteresEspeciais();
        }
        
    }
    
    public void iniciaDao() {
        
        if (dao == null) {
            dao = new DAO();
        }
        
    }
    
    public void iniciaEncriptaSenha() {
        
        if (criptaSenha == null) {
            criptaSenha = new EncriptaSenha();
        }
        
    }
    
    public void iniciaUsuario() {
        
        if (usuario == null) {
            usuario = new Usuario();
        }
        
    }
    
    public void iniciaUsuarioVerificado() {
        
        if (usuarioVerificado == null) {
            usuarioVerificado = new Usuario();
        }
        
    }
    
    public void verificaNomeUsuario() {

        iniciaDao();
        iniciaUsuarioVerificado();
        //DAO dao = new DAO();

        usuarioVerificado = (Usuario) dao.verificarNomeUsuario(jtfNomeUsuario.getText());

    }

//Getters and Setters===================================================================================================================================
    public void setUsuarioBuscado(Usuario usuarioBuscado) {

        if (usuarioBuscado.getNomeUsuario().isEmpty()) {
        } else {

            iniciaControleCaracteresEspeciais();
            iniciaUsuario();

            jtfNomeUsuario.setText(controleCaracteresEspeciais.getCaracterEspecial(usuarioBuscado.getNomeUsuario()));
            jtfMatriculaUsuario.setText("" + usuarioBuscado.getMatricula());
            jcbTemaEscolhido.setSelectedItem(usuarioBuscado.getTemaEscolhido());
            jcbTipoCadastro.setSelectedItem(usuarioBuscado.getTipoCadastro());
            jpswdfSenha.setText(usuarioBuscado.getSenha());
            senha = usuarioBuscado.getSenha();
            contraSenha = usuarioBuscado.getContraSenha();

            codigo = usuarioBuscado.getCodigoUsuario();
            usuario.setCodigoUsuario(codigo);

            desabilitaCampos();

            abilitaBotoes();

        }

    }

    public void setNumeroCaracteres() {

        jtfNomeUsuario.setDocument(new FixedLengthDocument(60));
        jtfMatriculaUsuario.setDocument(new FixedLengthDocument(10));

    }

    /*public String getTipoContraSenha() {
    return tipoContraSenha;
    }

    public void setTipoContraSenha(String tipoContraSenha) {
    this.tipoContraSenha = tipoContraSenha;
    abilitaPermissoes();
    }*/
    public String getTipoCadastroUsuario() {
        return tipoCadastroUsuario;
    }

    public void setTipoCadastroUsuario(String tipoCadastroUsuario) {
        this.tipoCadastroUsuario = tipoCadastroUsuario;
    }

    public String getNomeUsuario() {
        return nomeUsuario;
    }

    public void setNomeUsuario(String nomeUsuario) {
        this.nomeUsuario = nomeUsuario;
        preencheComboTipoCadastro();
        getPermissoes();
        desabilitaBotoes();
    }

    public void getPermissoes() {
        Permissoes permissoes;
        iniciaDao();
        //DAO dao = new DAO();

        permissoes = (Permissoes) dao.buscaPermissoes(getNomeUsuario());

        cadastrarUsuario = permissoes.isCadastrarUsuario();
    }

//Metodos DAO===================================================================================================================================
    

    public void salvar() {

        if (!jtfNomeUsuario.getText().isEmpty() || !jpswdfSenha.getText().isEmpty()) {

            iniciaDao();
            iniciaControleCaracteresEspeciais();
            iniciaEncriptaSenha();
            iniciaUsuario();

            usuario.setMatricula(Integer.valueOf(jtfMatriculaUsuario.getText()));
            usuario.setNomeUsuario(controleCaracteresEspeciais.getCodigoCaracterEpecial(jtfNomeUsuario.getText()));
            usuario.setSenha(criptaSenha.ResumirTexto(jpswdfSenha.getText()));
            usuario.setTemaEscolhido(jcbTemaEscolhido.getSelectedItem().toString());
            usuario.setTipoCadastro(jcbTipoCadastro.getSelectedItem().toString());

            dao.inserir(usuario, 7);
            cancelar();

        } else {
            iniciaClasseGeral();
            classeGeral.msgAtencao("Complete os Campos Obrigatórios, destacados em Azul!");
        }

    }

    public void atualizar() {

        if (!jtfNomeUsuario.getText().isEmpty()) {

            iniciaDao();
            iniciaControleCaracteresEspeciais();
            iniciaEncriptaSenha();
            iniciaUsuario();

            usuario.setMatricula(Integer.valueOf(jtfMatriculaUsuario.getText()));
            usuario.setNomeUsuario(controleCaracteresEspeciais.getCodigoCaracterEpecial(jtfNomeUsuario.getText()));
            usuario.setTemaEscolhido(jcbTemaEscolhido.getSelectedItem().toString());
            usuario.setTipoCadastro(jcbTipoCadastro.getSelectedItem().toString());

            if (jpswdfSenha.getText().equals(senha)) {
                usuario.setSenha(jpswdfSenha.getText());
            } else {
                usuario.setSenha(criptaSenha.ResumirTexto(jpswdfSenha.getText()));
            }

            dao.atualizar(usuario, 7);
            cancelar();

        } else {
            iniciaClasseGeral();
            classeGeral.msgAtencao("Complete os Campos Obrigatórios, destacados em Azul!");
        }

    }

    public void excluir() {

        iniciaClasseGeral();

        if (classeGeral.msgConfirma("Deseja excluir o usuário ?")) {

            iniciaDao();
            //DAO dao = new DAO();
            dao.excluir(usuario, 7);
            cancelar();

        }
    }
}
